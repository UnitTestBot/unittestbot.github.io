"use strict";(self.webpackChunkunittestbot_web=self.webpackChunkunittestbot_web||[]).push([[8706],{75940:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return s},default:function(){return u}});var a=n(87462),i=n(63366),o=(n(15007),n(64983)),r=n(23017),l=(n(8156),["components"]),s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!Object.prototype.hasOwnProperty.call(s,"__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/advanced/makefiles.md"}});var m={_frontmatter:s},c=r.Z;function u(e){var t=e.components,n=(0,i.Z)(e,l);return(0,o.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"makefiles"},"Makefiles"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.gnu.org/software/make/manual/make.html"},"GNU make")," is a primary tool for incremental build of bitcode and\nbinary files as well. Makefiles for binary files are public, so they may be used for tests running right from the\ncommand line."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Find corresponding makefiles, which are stored in host's project build directory, ",(0,o.kt)("inlineCode",{parentName:"li"},"utbot\\make")," subdirectory. For\nexample, makefile for ",(0,o.kt)("inlineCode",{parentName:"li"},"c-example\\src\\calc.c")," would be ",(0,o.kt)("inlineCode",{parentName:"li"},"c-example\\build\\utbot\\make\\calc.mk"),". Please note: makefiles\nand tests are generated at the same time."),(0,o.kt)("li",{parentName:"ol"},"When necessary makefile is found, use the 'cd' command to move from your present directory to makefile's one."),(0,o.kt)("li",{parentName:"ol"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"make -s -f calc.mk run"),", for example."),(0,o.kt)("li",{parentName:"ol"},"Congratulations! Your tests are run and status is shown in the command line.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"makefileRunImg",src:"https://github.com/UnitTestBot/unittestbot.github.io/raw/source/resources/images/makefileRun.png"})))}u&&u===Object(u)&&Object.isExtensible(u)&&!Object.prototype.hasOwnProperty.call(u,"__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/advanced/makefiles.md"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-advanced-makefiles-md-de464acb13f7de3520fa.js.map