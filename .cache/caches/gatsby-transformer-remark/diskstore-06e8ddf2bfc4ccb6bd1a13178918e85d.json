{"expireTime":9007200911767383000,"key":"transformer-remark-markdown-ast-12707c93632388f20814490f6efb7f0d--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Coverage","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":11,"offset":11}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":11,"offset":11}}},{"type":"paragraph","children":[{"type":"text","value":"When user wants to get information about coverage achieved by UTBot tests, UTBot recompiles test files and user code\nwith coverage instrumentation, using gcov or llvm-cov, depending on the chosen compiler for running tests. This is done\nby changing environment variables that affect UTBot Makefile. UTBot collects line coverage for user project files while\nrunning tests and displays it in VSCode plugin. Major advantage of UTBot is that it shows real project coverage\ncollected while running native binaries. If one wants to use UTBot in its command line mode, it is also able to report\ncoverage and place summary files in a specified directory.","position":{"start":{"line":4,"column":1,"offset":13},"end":{"line":9,"column":59,"offset":659}}}],"position":{"start":{"line":4,"column":1,"offset":13},"end":{"line":9,"column":59,"offset":659}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":9,"column":59,"offset":659}}}}