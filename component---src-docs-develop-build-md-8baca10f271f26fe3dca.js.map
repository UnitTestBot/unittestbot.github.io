{"version":3,"file":"component---src-docs-develop-build-md-8baca10f271f26fe3dca.js","mappings":"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","sources":["webpack://unittestbot-web/./src/docs/develop/build.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/user/Github/utbot-new-wiki/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"how-to-build-utbotcpp-from-source\"\n    }}>{`How to build UTBotCpp from source`}</h2>\n    <p>{`UTBot has many dependencies, so the easiest way to build the tool from source and develop it is to use the docker container.`}</p>\n    <p>{`UTBot has a published docker package called `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/UnitTestBot/UTBotCpp/pkgs/container/utbotcpp%2Fbase_env\"\n      }}>{`base_env`}</a>{`.\nIt contains all the needed dependencies such as Git, LLVM, GRPC, GoogleTest and others. `}<strong parentName=\"p\">{`base_env`}</strong>{` has multiple versions tagged with dates.\nIf you are developing the tool, you are most likely to need the most recent version from `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/UnitTestBot/UTBotCpp/pkgs/container/utbotcpp%2Fbase_env\"\n      }}>{`here`}</a>{`. `}</p>\n    <p>{`Supported and tested development configuration are Ubuntu 18.04 / 20.04 or Windows Subsystem for Linux (Ubuntu 18.04 / 20.04).`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install docker for `}<a parentName=\"p\" {...{\n            \"href\": \"https://docs.docker.com/engine/install/ubuntu/\"\n          }}>{`Ubuntu`}</a>{` or `}<a parentName=\"p\" {...{\n            \"href\": \"https://docs.docker.com/desktop/windows/wsl/\"\n          }}>{`WSL+Ubuntu`}</a></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install docker plugin that allows to mount host filesystem and remap owner and group:  `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`docker plugin install lebokus/bindfs\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Login into github docker registry: `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`docker login -u <github-username> -p <github-personal-access-token> ghcr.io\n`}</code></pre>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`You can create new `}<inlineCode parentName=\"p\">{`<personal-access-token>`}</inlineCode>{` on `}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/settings/tokens/new\"\n            }}>{`this github page`}</a>{`. Don't forget to check `}<inlineCode parentName=\"p\">{`read:packages`}</inlineCode>{` permission.`}<br parentName=\"p\"></br>{`\n`}{`More details are described `}<a parentName=\"p\" {...{\n              \"href\": \"https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#authenticating-to-the-container-registry\"\n            }}>{`here`}</a>{`.`}</p>\n        </blockquote>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run `}<inlineCode parentName=\"p\">{`docker/utbot_docker_dev.sh`}</inlineCode>{` `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/UnitTestBot/UTBotCpp/blob/main/docker/utbot_docker_dev.sh\"\n          }}>{`script`}</a>{`. It will unpack the docker image and mount UTBot sources inside it.\nUTBot binary can be built in the docker and run in it.\nThe script will prompt you to enter docker image tag. You can find the most recent tag `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/UnitTestBot/UTBotCpp/pkgs/container/utbotcpp%2Fbase_env\"\n          }}>{`here`}</a>{`, for example `}<inlineCode parentName=\"p\">{`24-11-2021`}</inlineCode>{`. `}</p>\n        <p parentName=\"li\">{`Installer will ask about `}<inlineCode parentName=\"p\">{`ssh_port`}</inlineCode>{` on host machine. This port will be forwarded inside container's ssh port (by default `}<inlineCode parentName=\"p\">{`sshd`}</inlineCode>{` in container listens 2020).\nYou may then login inside docker via `}<inlineCode parentName=\"p\">{`ssh utbot@host -p $ssh_port`}</inlineCode>{`, where `}<inlineCode parentName=\"p\">{`host`}</inlineCode>{` is a host machine IP address.`}</p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`⚠ Specify free port that is not in use on host machine!`}</p>\n        </blockquote>\n        <p parentName=\"li\">{`Also, you will be prompted to enter a gRPC port on host machine that will be forwarded inside container's 2121 port where UTBot listens gRPC requests.   `}</p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`Script will run docker image, mount specified folder on host filesystem into container's filesystem and forward ports for ssh and gRPC.`}</p>\n        </blockquote>\n      </li>\n    </ol>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Login via ssh into newly started container`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`ssh utbot@host -p $ssh_port \n`}</code></pre>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`You can type `}<inlineCode parentName=\"p\">{`localhost`}</inlineCode>{` as `}<inlineCode parentName=\"p\">{`host`}</inlineCode>{` if you are inside terminal of a host machine)\nIf you are prompted a password, enter `}<inlineCode parentName=\"p\">{`utbot`}</inlineCode>{`.`}</p>\n        </blockquote>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Clone UTBotCpp repository into home directory `}<strong parentName=\"p\">{`inside docker container`}</strong>{`, preferably with ssh.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`cd`}</inlineCode>{` into `}<inlineCode parentName=\"p\">{`UTBotCpp`}</inlineCode>{` directory and run `}<inlineCode parentName=\"p\">{`build.sh`}</inlineCode>{` — it is the script that builds KLEE UTBot and runs UTBot unit tests`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Clone submodules `}<inlineCode parentName=\"p\">{`git submodule update --init --recursive`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Navigate to `}<inlineCode parentName=\"p\">{`UTBotCpp/server/build`}</inlineCode>{` directory and launch the binary with `}<inlineCode parentName=\"p\">{`./utbot server`}</inlineCode>{` command. Now the server is running.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Launch VS Code on your local machine. Use VS Code `}<a parentName=\"p\" {...{\n            \"href\": \"https://code.visualstudio.com/docs/remote/ssh\"\n          }}>{`Remote-SSH`}</a>{` to get access to the docker insides. Navigate to `}<inlineCode parentName=\"p\">{`UTBotCpp/vscode-plugin`}</inlineCode>{` directory and run `}<inlineCode parentName=\"p\">{`build.sh`}</inlineCode>{` script.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Press F5 (`}<em parentName=\"p\">{`Run Extension`}</em>{`). This will run UTBot VS Code plugin.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`A new VS Code window will open; this window will have UTBot VS Code plugin enabled. In this new folder, open `}<inlineCode parentName=\"p\">{`UTBotCpp/integration-tests/c-example`}</inlineCode>{` directory.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`When UTBot Quickstart Wizard requests you to enter server host and port, specify `}<inlineCode parentName=\"p\">{`localhost`}</inlineCode>{` and UTBot server run port 2121, respectively.\n`}<img alt=\"Oops, something went wrong! Please look at wizardInstall.gif\" src=\"https://raw.githubusercontent.com/UnitTestBot/unittestbot.github.io/source/resources/gifs/wizardInstall.gif\" /></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Select project path as `}<inlineCode parentName=\"p\">{`/home/utbot/UTBotCpp/integration-tests/c-example`}</inlineCode>{`;`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`You are now ready to experience UTBot capabilities! You can view possible commands in Command Palette (Press F1 and type in UTBot).`}</p>\n      </li>\n    </ol>\n    <p>{`If you want to change UTBot test generation preferences, you can edit them in  File > Preferences > Settings > Extensions > UnitTestBot.\nAfter UTBot configuration, you can select your source directories with the tab on the VSCode toolbar on the left. Then, you can generate tests with the use of Command Palette. Press `}<strong parentName=\"p\">{`F1`}</strong>{` and type in \"UTBot\": You will see tests generation options.`}</p>\n    <h2 {...{\n      \"id\": \"how-to-develop-utbotcpp-with-an-clion\"\n    }}>{`How to develop UTBotCpp with an CLion`}</h2>\n    <p>{`You can edit UTBot sources, rebuild and rerun the server.`}</p>\n    <p>{`To setup it:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Open UTBotCpp project in CLion on your local machine.`}</li>\n      <li parentName=\"ol\">{`Open `}<strong parentName=\"li\">{`Settings > Build, Execution, Deployment > Toolchains`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Add a new `}<em parentName=\"li\">{`Remote Host`}</em>{` toolchain.`}</li>\n      <li parentName=\"ol\">{`In `}<em parentName=\"li\">{`Credentials`}</em>{` section, set up an `}<inlineCode parentName=\"li\">{`ssh`}</inlineCode>{` connection to the UTBot docker container you have. Consider enabling connection via OpehSSH authentification agent to ease files synchronization.`}</li>\n      <li parentName=\"ol\">{`All other fields should fill in automatically.`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","isMDXComponent"],"sourceRoot":""}