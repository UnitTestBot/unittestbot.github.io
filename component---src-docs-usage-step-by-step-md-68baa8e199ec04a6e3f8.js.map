{"version":3,"file":"component---src-docs-usage-step-by-step-md-68baa8e199ec04a6e3f8.js","mappings":"8RAQaA,EAAe,Q,sOAC5B,IAAMC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,cACE,GAAM,4BADR,6BAGA,qDACF,aAAGC,WAAW,IACR,KAAQ,kBADd,+BAGE,oBAAK,gBAAMA,WAAW,OAAjB,umBAeL,iDAAmC,sBAAYA,WAAW,KAAvB,mCAAnC,sBACA,wBAAU,eAAKC,IAAI,mBAAmBC,IAAI,uGAC1C,6BAAe,sBAAYF,WAAW,KAAvB,iBAAf,iFACA,oBAAK,gBAAMA,WAAW,OAAjB,iMAGL,wBAAU,eAAKC,IAAI,iBAAiBC,IAAI,qGACxC,oDACF,aAAGF,WAAW,IACR,KAAQ,yBADd,sCAGE,oBAAK,gBAAMA,WAAW,OAAjB,uVAKL,wBAAU,eAAKC,IAAI,mBAAmBC,IAAI,uGAC1C,+EAEE,aAAGF,WAAW,IACZ,KAAQ,iFADV,eAGF,oBAAK,gBAAMA,WAAW,OAAjB,iCAEL,6BAAe,sBAAYA,WAAW,KAAvB,iBAAf,qBACA,oBAAK,gBAAMA,WAAW,OAAjB,kQAKL,wBAAU,eAAKC,IAAI,gBAAgBC,IAAI,oGACvC,oBAAK,gBAAMF,WAAW,MAClB,UAAa,iBADZ,gYAYL,sDACF,aAAGA,WAAW,IACR,KAAQ,UADd,6BAGE,oBAAK,gBAAMA,WAAW,OAAjB,yoBAYL,wBAAU,eAAKC,IAAI,YAAYC,IAAI,gGACnC,oDACA,oBAAK,gBAAMF,WAAW,OAAjB,gLAIL,wBAAU,eAAKC,IAAI,cAAcC,IAAI,kGACrC,6CACF,aAAGF,WAAW,IACR,KAAQ,oBADd,yBAGE,oBAAK,gBAAMA,WAAW,OAAjB,muB,6NAiBTJ,EAAWO,gBAAiB","sources":["webpack://unittestbot-web/./src/docs/usage/step-by-step.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/unittestbot.github.io/unittestbot.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"step-by-step-release-use\"\n    }}>{`Step by step release use`}</h1>\n    <p>{`1) #### Install and run server\n`}<a parentName=\"p\" {...{\n        \"href\": \"install-server\"\n      }}>{`More about server install`}</a></p>\n    <pre><code parentName=\"pre\" {...{}}>{`* \\`(remote only)\\` Connect to your server\n* make directory for UTBotCpp\n  \\`mkdir utbotcpp\\`\n* go into directory\n  \\`cd utbotcpp\\`\n* add release version to bash env, check it\n  on [github releases page](https://github.com/UnitTestBot/UTBotCpp/releases)\n  \\`export UTBOT_VERSION=\"1.0.31\"\\`\n* Download archive from\n  \\`wget https://github.com/UnitTestBot/UTBotCpp/releases/download/v$UTBOT_VERSION/utbot-release-$UTBOT_VERSION.zip\\`\n* unarchive zip\n  \\`unzip utbot-release-$UTBOT_VERSION.zip\\`\n* unarchive from tar.gz and run UTBotCpp server\n  \\`chmod +x unpack_and_run_utbot.sh && ./unpack_and_run_utbot.sh\\`\n`}</code></pre>\n    <p>{`   for restart UTBotCpp run `}<inlineCode parentName=\"p\">{`./utbot_server_restart.sh $PORT`}</inlineCode>{` from utbot_distr`}</p>\n    <p>{`   `}<img alt=\"serverinstallGif\" src=\"https://github.com/UnitTestBot/unittestbot.github.io/raw/source/resources/gifs/serverInstall.gif\" /></p>\n    <p>{`2) #### `}<inlineCode parentName=\"p\">{`(remote only)`}</inlineCode>{` Install VSCode SFTP plugin (skip if you already have installed SFTP plugin)`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`* [link](https://marketplace.visualstudio.com/items?itemName=Natizyskunk.sftp)\n* in VSCode invoke \\`Developer: Reload Window\\` command from the Command Palette \\`Shift + Ctrl + P\\` or \\`F1\\`\n`}</code></pre>\n    <p>{`   `}<img alt=\"sftpinstallGif\" src=\"https://github.com/UnitTestBot/unittestbot.github.io/raw/source/resources/gifs/sftpinstall.gif\" /></p>\n    <p>{`3) #### Install VSCode plugin\n`}<a parentName=\"p\" {...{\n        \"href\": \"install-vscode-plugin\"\n      }}>{`More about VSCode plugin install`}</a></p>\n    <pre><code parentName=\"pre\" {...{}}>{`* \\`(remote only)\\` download archive from [github releases page](https://github.com/UnitTestBot/UTBotCpp/releases)\n* \\`(remote only)\\` unarchive zip\n* in VSCode inovke \\`Extensions: Install from VSIX\\` command from the Command Palette \\`Shift + Ctrl + P\\` or \\`F1\\`\n* choose the \\`utbot_plugin.vsix\\` file, that contains in release zip archive.\n`}</code></pre>\n    <p>{`   `}<img alt=\"clientinstallGif\" src=\"https://github.com/UnitTestBot/unittestbot.github.io/raw/source/resources/gifs/clientInstall.gif\" /></p>\n    <p>{`4) #### Open project\nFor test project, we recommend\nuse `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/UnitTestBot/UTBotCpp/tree/main/integration-tests/c-example\"\n      }}>{`c-example`}</a></p>\n    <pre><code parentName=\"pre\" {...{}}>{`* \\`File\\` -> \\`Open Folder\\`\n`}</code></pre>\n    <p>{`5) #### `}<inlineCode parentName=\"p\">{`(remote only)`}</inlineCode>{` Add SFTP config`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`* in VSCode invoke \\`SFTP: config\\` command from the Command Palette \\`Shift + Ctrl + P\\` or \\`F1\\`\n* fill with your data\n* in VSCode invoke \\`SFTP: Sync Local -> Remote\\` command from the Command Palette \\`Shift + Ctrl + P\\` or \\`F1\\`\n* check files on server\n`}</code></pre>\n    <p>{`   `}<img alt=\"sftpconfigGif\" src=\"https://github.com/UnitTestBot/unittestbot.github.io/raw/source/resources/gifs/sftpconfig.gif\" /></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"name\": \"ServerName\",\n    \"host\": \"192.168.1.50\", // your server ip, or host name\n    \"protocol\": \"sftp\",\n    \"port\": 22, // ssh port to server usually 22\n    \"username\": \"utbot\", // username on server\n    \"remotePath\": \"/home/utbot/remote/c-example\", // path for project should same with path that you set in UTBotCpp plugin settings \n    \"uploadOnSave\": true\n}\n`}</code></pre>\n    <p>{`6) #### Configure VSCode plugin\n`}<a parentName=\"p\" {...{\n        \"href\": \"wizard\"\n      }}>{`More about UTBot wizard`}</a></p>\n    <pre><code parentName=\"pre\" {...{}}>{`* in VSCode invoke \\`Run UTBot: Quickstart Wizard\\` command from the Command Palette \\`Shift + Ctrl + P\\` or \\`F1\\`\n* \\`Host\\` on \\`Connection\\` page\n    * \\`(same machine)\\` set \\`127.0.0.1\\`\n    * \\`(remote only)\\` set same with SFTP host ip\n* \\`Port\\` on \\`Connection\\` page by default \\`2121\\`, or \\`$PORT\\` that you use then run \\`./utbot_server_restart.sh $PORT\\`\n* \\`Remote Path\\` page\n    * \\`(same machine)\\` set path to project that you open\n    * \\`(remote only)\\` set same with SFTP remotePath\n* use defaults \\`Build Directory\\` and \\`CMake Options\\`\n* press Finish\n* Open \\`UTBot explorer\\` from left corner or press F1 and type \\`View: Show UTBot explorer\\`\n`}</code></pre>\n    <p>{`   `}<img alt=\"wizardGif\" src=\"https://github.com/UnitTestBot/unittestbot.github.io/raw/source/resources/gifs/wizard.gif\" /></p>\n    <p>{`7) #### First tests generation`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`* right click on some source file \\`Generate Tests\\` -> \\`for Current File\\`\n* in lower right corner press \\`Create build folder\\`\n* in lower right corner press \\`Configure\\`\n`}</code></pre>\n    <p>{`   `}<img alt=\"generateGif\" src=\"https://github.com/UnitTestBot/unittestbot.github.io/raw/source/resources/gifs/generate.gif\" /></p>\n    <p>{`8) #### Generate tests\n`}<a parentName=\"p\" {...{\n        \"href\": \"generating-tests\"\n      }}>{`More generate tests`}</a></p>\n    <pre><code parentName=\"pre\" {...{}}>{`- For project\n    * in VSCode invoke \\`UTBot: Generate Tests For Project\\` command from the Command Palette \\`Shift + Ctrl + P\\`\n      or \\`F1\\`\n    * right click in VSCode folder explorer and click \\`UTBot: Generate Tests For Project\\`\n- For file open file\n    * in VSCode invoke \\`UTBot: Generate Tests For Current File\\` command from the Command palette \\`Shift + Ctrl + P\\`\n      or \\`F1\\`\n    * right click on it \\`Generate Tests\\` -> \\`for Current File\\`\n- For function open file with function\n    * place the carriage in function body, invoke \\`UTBot: Generate Tests For Current Function\\` command from the\n      Command Palette \\`Shift + Ctrl + P\\` or \\`F1\\`\n    * right click on function body \\`Generate Tests\\` -> \\`for Current Function\\`\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","isMDXComponent"],"sourceRoot":""}