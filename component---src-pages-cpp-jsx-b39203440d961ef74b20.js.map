{"version":3,"file":"component---src-pages-cpp-jsx-b39203440d961ef74b20.js","mappings":"wQACO,MAAMA,EAAO,0B,0DCKL,SAASC,EAAS,GAAoB,IAAlBC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAC1C,OACE,oBACE,QAAC,IAAO,CAACC,GAAG,KAAKC,UAAU,aACxBH,IAGH,QAAC,IAAI,CAACI,wBAAyB,CAAEC,OAAQJ,KAG/C,CAAC,yN,yBChBD,EAAe,IAA0B,sECAzC,EAAe,IAA0B,oECAzC,EAAe,IAA0B,4DC8IvC,GAEaK,EAAAA,EAAAA,IAzHC,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SACjB,GAAoBC,EAAAA,EAAAA,KAAZC,EAAC,EAADA,EAAO,EAAJC,KAEX,OACE,QAAC,IAAM,CAACH,SAAUA,IAChB,eAAKJ,UAAWQ,EAAAA,WACd,QAACC,EAAA,EAAS,CAACT,UAAWQ,EAAAA,KACpB,QAAC,IAAO,KACLF,EAAE,yBAAwB,KAAE,mBAC5BA,EAAE,oCAGL,QAAC,IAAI,CACHN,UAAWU,IAAG,cAAeF,EAAAA,GAAgBG,GAC7CV,wBAAyB,CAAEC,OAAQI,EAAE,uCAGvC,eAAKN,UAAWQ,EAAAA,KACd,QAAC,EAAAI,KAAI,CAACC,GAAG,WACP,QAAC,IAAM,KAAEP,EAAE,6BAGb,QAAC,EAAAM,KAAI,CACHC,GAAG,+CACHb,UAAWQ,EAAAA,KAEX,eACEM,IAAKC,EAAAA,EACLC,MAAM,KACNC,OAAO,KACPC,IAAI,iBAELZ,EAAE,gCAGL,QAAC,EAAAM,KAAI,CAACC,GAAG,mCACP,eAAKC,IAAKK,EAAAA,EAAYH,MAAM,KAAKC,OAAO,KAAKC,IAAI,qBAmBzD,QAACT,EAAA,EAAS,CAACT,UAAWQ,EAAAA,KACpB,eAAKR,UAAWW,IACd,QAACf,EAAQ,CACPC,QAASS,EAAE,+BACXR,KAAMQ,EAAE,oCAGV,QAACV,EAAQ,CACPC,QAASS,EAAE,6BACXR,KAAMQ,EAAE,yCAIZ,QAAC,IAAW,CACVT,QAASS,EAAE,mCACXR,KAAMQ,EAAE,kCACRc,OAAQC,EACRC,OAAO,2BACPC,aAAa,WAGf,QAAC,IAAW,CACV1B,QAASS,EAAE,gCACXR,KAAMQ,EAAE,+BACRc,OAAQI,EACRF,OAAO,wBACPC,aAAa,UAGf,QAAC,IAAW,CACV1B,QAASS,EAAE,gCACXR,KAAMQ,EAAE,+BACRc,OAAQK,EAIRH,OAAO,+CACPC,aAAa,WAGf,eAAKvB,UAAWW,IACd,QAACf,EAAQ,CACPC,QAASS,EAAE,sBACXR,KAAMQ,EAAE,wBAGV,QAACV,EAAQ,CACPC,QAASS,EAAE,+BACXR,KAAMQ,EAAE,iCAGV,QAACV,EAAQ,CACPC,QAASS,EAAE,gCACXR,KAAMQ,EAAE,kCAGV,QAACV,EAAQ,CACPC,QAASS,EAAE,iCACXR,KAAMQ,EAAE,oCAMpB,IAEkC,gP","sources":["webpack://unittestbot-web/./src/pages/styles/cpp.module.css","webpack://unittestbot-web/./src/components/info-card.jsx","webpack://unittestbot-web/./src/gifs/cpp/test-generation-example.gif","webpack://unittestbot-web/./src/gifs/cpp/configuration-example.gif","webpack://unittestbot-web/./src/images/cpp/vs-code-clion.png","webpack://unittestbot-web/./src/pages/cpp.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport const info = \"cpp-module--info---FABI\";","import React from \"react\";\nimport cn from \"classnames\";\n\nimport Heading from \"./heading\";\nimport Text from \"./text\";\n\nexport default function InfoCard({ heading, text }) {\n  return (\n    <div>\n      <Heading as=\"h3\" className=\"text-left\">\n        {heading}\n      </Heading>\n\n      <Text dangerouslySetInnerHTML={{ __html: text }} />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/test-generation-example-e70d86124c006784fcffc76a4c2818c7.gif\";","export default __webpack_public_path__ + \"static/configuration-example-73180b293b5013cc4a61573f1a358908.gif\";","export default __webpack_public_path__ + \"static/vs-code-clion-8d8809b27170a2db52c8d2e96da7c5b8.png\";","import * as React from \"react\";\nimport cn from \"classnames\";\nimport { Container } from \"react-bootstrap\";\nimport { Link } from \"gatsby\";\nimport { useTranslation } from \"react-i18next\";\nimport Layout from \"../components/layout\";\nimport withTrans from \"../i18n/withTrans\";\nimport * as styles from \"./styles/index.module.css\";\nimport * as stylesCpp from \"./styles/cpp.module.css\";\n\nimport Button from \"../components/button\";\nimport Heading from \"../components/heading\";\nimport Text from \"../components/text\";\nimport ExampleCard from \"../components/example-card\";\nimport InfoCard from \"../components/info-card\";\n\nimport watchDemoIcon from \"../images/watch-demo-icon.png\";\nimport githubIcon from \"../images/github-transparent.png\";\n\nimport testsGenerationExample from \"../gifs/cpp/test-generation-example.gif\";\nimport configurationGif from \"../gifs/cpp/configuration-example.gif\";\nimport vsCodeClionImage from \"../images/cpp/vs-code-clion.png\";\n\nconst CppPage = ({ location }) => {\n  const { t, i18n } = useTranslation();\n\n  return (\n    <Layout location={location}>\n      <div className={styles.gradient}>\n        <Container className={styles.topContainer}>\n          <Heading>\n            {t(\"cppHome.utbotCppTitle\")} <br />\n            {t(\"cppHome.changesExperienceTitle\")}\n          </Heading>\n\n          <Text\n            className={cn(\"text-center\", styles.topText, stylesCpp.info)}\n            dangerouslySetInnerHTML={{ __html: t(\"cppHome.utbotCppDescriptionText\") }}\n          />\n\n          <div className={styles.actions}>\n            <Link to=\"/utbot\">\n              <Button>{t(\"javaHome.tryOnlineText\")}</Button>\n            </Link>\n\n            <Link\n              to=\"https://www.youtube.com/watch?v=bDJyWEeYhvks\"\n              className={styles.howWorksLink}\n            >\n              <img\n                src={watchDemoIcon}\n                width=\"32\"\n                height=\"30\"\n                alt=\"Youtube Logo\"\n              />\n              {t(\"javaHome.watchHowWorksText\")}\n            </Link>\n\n            <Link to=\"https://github.com/UnitTestBot\">\n              <img src={githubIcon} width=\"50\" height=\"50\" alt=\"Github Logo\" />\n            </Link>\n          </div>\n\n          {/* <ul role=\"list\" className={styles.buttons}>\n            <li>\n              <Link to=\"/docs/cpp\">\n                <Button variant=\"outline\">User guide</Button>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"https://github.com/UnitTestBot/UTBotCpp/releases\">\n                <Button variant=\"outline\">Install from GitHub</Button>\n              </Link>\n            </li>\n          </ul> */}\n        </Container>\n      </div>\n\n      <Container className={styles.examples}>\n        <div className={stylesCpp.info}>\n          <InfoCard\n            heading={t(\"cppHome.perfectTestingTitle\")}\n            text={t(\"cppHome.whyUtbotIsCapableText\")}\n          />\n\n          <InfoCard\n            heading={t(\"cppHome.checkForBugsTitle\")}\n            text={t(\"cppHome.fixateCurrentBehaviorText\")}\n          />\n        </div>\n\n        <ExampleCard\n          heading={t(\"cppHome.specifyTestingAreaTitle\")}\n          text={t(\"cppHome.testsForAssertionsText\")}\n          gifSrc={testsGenerationExample}\n          gifAlt=\"Tests generation example\"\n          gifPlacement=\"right\"\n        />\n\n        <ExampleCard\n          heading={t(\"cppHome.easilyConfigureTitle\")}\n          text={t(\"cppHome.easilyConfigureText\")}\n          gifSrc={configurationGif}\n          gifAlt=\"Configuration example\"\n          gifPlacement=\"left\"\n        />\n\n        <ExampleCard\n          heading={t(\"cppHome.findUtbotForCppTitle\")}\n          text={t(\"cppHome.findUtbotForCppText\")}\n          gifSrc={vsCodeClionImage}\n\n\n\n          gifAlt=\"UnitTestBot VS Code and CLion plugin example\"\n          gifPlacement=\"right\"\n        />\n\n        <div className={stylesCpp.info}>\n          <InfoCard\n            heading={t(\"cppHome.stubsTitle\")}\n            text={t(\"cppHome.stubsText\")}\n          />\n\n          <InfoCard\n            heading={t(\"cppHome.useBuildSystemTitle\")}\n            text={t(\"cppHome.useBuildSystemText\")}\n          />\n\n          <InfoCard\n            heading={t(\"cppHome.supportedSyntaxTitle\")}\n            text={t(\"cppHome.supportedSyntaxText\")}\n          />\n\n          <InfoCard\n            heading={t(\"cppHome.googleTestFormatTitle\")}\n            text={t(\"cppHome.googleTestFormatText\")}\n          />\n        </div>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default withTrans(CppPage);\n"],"names":["info","InfoCard","heading","text","as","className","dangerouslySetInnerHTML","__html","withTrans","location","useTranslation","t","i18n","styles","Container","cn","stylesCpp","Link","to","src","watchDemoIcon","width","height","alt","githubIcon","gifSrc","testsGenerationExample","gifAlt","gifPlacement","configurationGif","vsCodeClionImage"],"sourceRoot":""}