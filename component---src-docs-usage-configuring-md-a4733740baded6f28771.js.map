{"version":3,"file":"component---src-docs-usage-configuring-md-a4733740baded6f28771.js","mappings":"oTAUaA,EAAe,Q,+MAC5B,IAAMC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAI5E,cACE,GAAM,uBADR,wBAGA,4NAEA,cACE,GAAM,+BADR,gCAGA,cACE,GAAM,gCADR,iCAGA,mJAC6C,sBAAYC,WAAW,KAAvB,uBAD7C,iEAEiD,sBAAYA,WAAW,KAAvB,WAFjD,qBAGA,eAAKC,IAAKC,EAAAA,EAA2BC,UAAU,aAC/C,cACE,GAAM,wBADR,yBAGA,wJAEc,sBAAYH,WAAW,KAAvB,SAFd,mKAGwD,sBAAYA,WAAW,KAAvB,kBAHxD,sGAIwE,sBAAYA,WAAW,KAAvB,yBAJxE,SAIkJ,sBAAYA,WAAW,KAAvB,sBAJlJ,sCAK6B,sBAAYA,WAAW,KAAvB,aAL7B,mFAKqK,sBAAYA,WAAW,KAAvB,sBALrK,MAMA,eAAKC,IAAKG,EAAAA,EAA6BD,UAAU,aACjD,2BACE,aAAGH,WAAW,cAAd,MAAiC,kBAAQA,WAAW,KAAnB,UACjC,aAAGA,WAAW,cAAd,WAAsC,sBAAYA,WAAW,KAAvB,WAAtC,8BAAuH,aAAGA,WAAW,IACjI,KAAQ,0FACP,sBAAYA,WAAW,KAAvB,SAFL,Y,sMAQNJ,EAAWS,gBAAiB","sources":["webpack://unittestbot-web/./src/docs/usage/configuring.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/user/unittestbot.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport configureCheckBuildFolder from '/resources/images/configureCheckBuildFolder.png';\nimport configureExportProjectModel from '/resources/images/configureExportProjectModel.png';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"configuring-project\"\n    }}>{`Configuring Project`}</h1>\n    <p>{`When you initialize your C project with UTBot Wizard, extension will suggest you to configure project.\nAlso, you may configure project afterwards using command 'UTBot: Configure project' in pallet.`}</p>\n    <h2 {...{\n      \"id\": \"project-configuration-steps\"\n    }}>{`Project Configuration Steps`}</h2>\n    <h3 {...{\n      \"id\": \"check-build-folder-for-exist\"\n    }}>{`Check Build Folder for exist`}</h3>\n    <p>{`Firstly, if build folder is missing, extension will offer you to create that.\nIn case you haven't done it yet, you may click `}<inlineCode parentName=\"p\">{`Create build folder`}</inlineCode>{` button.\nUTBot will create that on host machine (as well as `}<inlineCode parentName=\"p\">{`bear.sh`}</inlineCode>{` script within).`}</p>\n    <img src={configureCheckBuildFolder} className=\"demoImg\" />\n    <h3 {...{\n      \"id\": \"export-project-model\"\n    }}>{`Export Project Model`}</h3>\n    <p>{`Then, you will be asked to configure project.\nIn case you haven't done it yet, you may click 'Configure' button.\nUTBot will call `}<inlineCode parentName=\"p\">{`cmake`}</inlineCode>{` command for CMake project. It also will pass root directory and CMake options specified in wizard.\nNext, regardless of project's type UTBot will try to call `}<inlineCode parentName=\"p\">{`./bear.sh make`}</inlineCode>{` from build directory.\nIf everything is successful, two files will be created in build directory `}<inlineCode parentName=\"p\">{`compile_commands.json`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`link_commands.json`}</inlineCode>{`.\nOr, alternatively, you may run `}<inlineCode parentName=\"p\">{`./bear.sh`}</inlineCode>{` from create build directory with your build command as argument. For example, `}<inlineCode parentName=\"p\">{`./bear.sh make -j8`}</inlineCode>{`.`}</p>\n    <img src={configureExportProjectModel} className=\"demoImg\" />\n    <blockquote>\n      <p parentName=\"blockquote\">{`üìù`}<strong parentName=\"p\">{`Note`}</strong></p>\n      <p parentName=\"blockquote\">{`Script `}<inlineCode parentName=\"p\">{`bear.sh`}</inlineCode>{` is just a wrapper around `}<a parentName=\"p\" {...{\n          \"href\": \"https://rnd-gitlab-msc.huawei.com/unittestbot/UnitTestBot/-/tree/master/UTBotCpp/bear\"\n        }}><inlineCode parentName=\"a\">{`bear`}</inlineCode></a>{` tool.`}</p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","src","configureCheckBuildFolder","className","configureExportProjectModel","isMDXComponent"],"sourceRoot":""}