{"version":3,"file":"component---src-docs-usage-run-generated-tests-md-f13583dfe77e4da07da8.js","mappings":"oTAUaA,EAAe,Q,uNAC5B,IAAMC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAI5E,cACE,GAAM,uBADR,wBAGA,cACE,GAAM,6BADR,8BAGA,oGACA,iEAAmD,sBAAYC,WAAW,KAAvB,0BAAnD,wDACA,qFAAuE,sBAAYA,WAAW,KAAvB,2BAAvE,0GAC6C,sBAAYA,WAAW,KAAvB,mBAD7C,OAEA,sGAAwF,sBAAYA,WAAW,KAAvB,mCAAxF,MACA,0NAEA,2BACE,aAAGA,WAAW,cAAd,MAAiC,kBAAQA,WAAW,KAAnB,gBACjC,aAAGA,WAAW,cAAd,oDAA+E,kBAAQA,WAAW,KAAnB,+BAA/E,6FAGF,sGACA,eAAKC,IAAKC,EAAAA,EAAYC,UAAU,YAChC,eAAKF,IAAKG,EAAAA,EAAaD,UAAU,Y,8MAWrCP,EAAWS,gBAAiB","sources":["webpack://unittestbot-web/./src/docs/usage/run-generated-tests.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/user/unittestbot.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport RunTestGif from '/resources/gifs/runtest.gif';\nimport RunTestsGif from '/resources/gifs/runtests.gif';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"run-generated-tests\"\n    }}>{`Run Generated Tests`}</h1>\n    <h2 {...{\n      \"id\": \"coverage-and-test-results\"\n    }}>{`Coverage and Test Results`}</h2>\n    <p>{`UnitTestBot provides an opportunity to run generated tests right from VS Code.`}</p>\n    <p>{`Every generated test has a special CodeLens `}<inlineCode parentName=\"p\">{`Run Test With Coverage`}</inlineCode>{` above it. It allows you to run the specified test.`}</p>\n    <p>{`Also, in every test file generated by UTBot there is a CodeLens `}<inlineCode parentName=\"p\">{`Run Tests With Coverage`}</inlineCode>{` that makes it possible to run all tests in the file.\nThis Lens is located right above the line with `}<inlineCode parentName=\"p\">{`namespace UTBot`}</inlineCode>{`. `}</p>\n    <p>{`You can also run all tests that UnitTestBot has generated by calling the command `}<inlineCode parentName=\"p\">{`Run All Tests and Show Coverage`}</inlineCode>{`.`}</p>\n    <p>{`After you run tests, UTBot will display the coverage for the code fragments this test covers on the VS Code gutter.\nBesides, UTBot can display results on the VS Code gutter near the test headers.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`⚠️`}<strong parentName=\"p\">{`Be advised`}</strong></p>\n      <p parentName=\"blockquote\">{`If you use a separate Tests Runner for VS Code, `}<strong parentName=\"p\">{`it's recommended to disable`}</strong>{` test status that UTBot displays after test runs.\nOtherwise, it might cause collision.`}</p>\n    </blockquote>\n    <p>{`Below we provide examples of how you can run single test or the whole test file.`}</p>\n    <img src={RunTestGif} className=\"runGif\" />\n    <img src={RunTestsGif} className=\"runGif\" />\n    {\n      /* ## Test Console \n      **TODO** \n      ## Makefiles\n      **TODO** */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","src","RunTestGif","className","RunTestsGif","isMDXComponent"],"sourceRoot":""}