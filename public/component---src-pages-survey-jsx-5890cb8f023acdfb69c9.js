"use strict";(self.webpackChunkunittestbot_web=self.webpackChunkunittestbot_web||[]).push([[119],{82084:function(e,t,n){n.r(t),n.d(t,{default:function(){return H}});var r=n(15007),i=n(30775),a=n(33666),s=(n(27936),n(81277)),o=n(80235),l=(n(2033),n(70211),n(4763),n(87462)),c=n(63366),u=n(75900),d=n.n(u),p=(n(7526),r.default.forwardRef((function(e,t){var n=e.as,i=void 0===n?"div":n,a=e.className,s=e.type,o=void 0===s?"valid":s,u=e.tooltip,p=void 0!==u&&u,f=(0,c.Z)(e,["as","className","type","tooltip"]);return r.default.createElement(i,(0,l.Z)({},f,{ref:t,className:d()(a,o+"-"+(p?"tooltip":"feedback"))}))})));p.displayName="Feedback";var f=p,m=r.default.createContext({controlId:void 0}),v=n(99541),h=r.default.forwardRef((function(e,t){var n=e.id,i=e.bsPrefix,a=e.bsCustomPrefix,s=e.className,o=e.type,u=void 0===o?"checkbox":o,p=e.isValid,f=void 0!==p&&p,h=e.isInvalid,b=void 0!==h&&h,y=e.isStatic,g=e.as,x=void 0===g?"input":g,w=(0,c.Z)(e,["id","bsPrefix","bsCustomPrefix","className","type","isValid","isInvalid","isStatic","as"]),S=(0,r.useContext)(m),P=S.controlId,N=S.custom?[a,"custom-control-input"]:[i,"form-check-input"],I=N[0],T=N[1];return i=(0,v.vE)(I,T),r.default.createElement(x,(0,l.Z)({},w,{ref:t,type:u,id:n||P,className:d()(s,i,f&&"is-valid",b&&"is-invalid",y&&"position-static")}))}));h.displayName="FormCheckInput";var b=h,y=r.default.forwardRef((function(e,t){var n=e.bsPrefix,i=e.bsCustomPrefix,a=e.className,s=e.htmlFor,o=(0,c.Z)(e,["bsPrefix","bsCustomPrefix","className","htmlFor"]),u=(0,r.useContext)(m),p=u.controlId,f=u.custom?[i,"custom-control-label"]:[n,"form-check-label"],h=f[0],b=f[1];return n=(0,v.vE)(h,b),r.default.createElement("label",(0,l.Z)({},o,{ref:t,htmlFor:s||p,className:d()(a,n)}))}));y.displayName="FormCheckLabel";var g=y,x=r.default.forwardRef((function(e,t){var n=e.id,i=e.bsPrefix,a=e.bsCustomPrefix,s=e.inline,o=void 0!==s&&s,u=e.disabled,p=void 0!==u&&u,h=e.isValid,y=void 0!==h&&h,x=e.isInvalid,w=void 0!==x&&x,S=e.feedbackTooltip,P=void 0!==S&&S,N=e.feedback,I=e.className,T=e.style,R=e.title,k=void 0===R?"":R,E=e.type,C=void 0===E?"checkbox":E,F=e.label,j=e.children,Z=e.custom,A=e.as,O=void 0===A?"input":A,L=(0,c.Z)(e,["id","bsPrefix","bsCustomPrefix","inline","disabled","isValid","isInvalid","feedbackTooltip","feedback","className","style","title","type","label","children","custom","as"]),_="switch"===C||Z,M=_?[a,"custom-control"]:[i,"form-check"],V=M[0],q=M[1];i=(0,v.vE)(V,q);var D=(0,r.useContext)(m).controlId,J=(0,r.useMemo)((function(){return{controlId:n||D,custom:_}}),[D,_,n]),B=_||null!=F&&!1!==F&&!j,z=r.default.createElement(b,(0,l.Z)({},L,{type:"switch"===C?"checkbox":C,ref:t,isValid:y,isInvalid:w,isStatic:!B,disabled:p,as:O}));return r.default.createElement(m.Provider,{value:J},r.default.createElement("div",{style:T,className:d()(I,i,_&&"custom-"+C,o&&i+"-inline")},j||r.default.createElement(r.default.Fragment,null,z,B&&r.default.createElement(g,{title:k},F),(y||w)&&r.default.createElement(f,{type:y?"valid":"invalid",tooltip:P},N))))}));x.displayName="FormCheck",x.Input=b,x.Label=g;var w=x,S=r.default.forwardRef((function(e,t){var n=e.id,i=e.bsPrefix,a=e.bsCustomPrefix,s=e.className,o=e.isValid,u=e.isInvalid,p=e.lang,f=e.as,h=void 0===f?"input":f,b=(0,c.Z)(e,["id","bsPrefix","bsCustomPrefix","className","isValid","isInvalid","lang","as"]),y=(0,r.useContext)(m),g=y.controlId,x=y.custom?[a,"custom-file-input"]:[i,"form-control-file"],w=x[0],S=x[1];return i=(0,v.vE)(w,S),r.default.createElement(h,(0,l.Z)({},b,{ref:t,id:n||g,type:"file",lang:p,className:d()(s,i,o&&"is-valid",u&&"is-invalid")}))}));S.displayName="FormFileInput";var P=S,N=r.default.forwardRef((function(e,t){var n=e.bsPrefix,i=e.bsCustomPrefix,a=e.className,s=e.htmlFor,o=(0,c.Z)(e,["bsPrefix","bsCustomPrefix","className","htmlFor"]),u=(0,r.useContext)(m),p=u.controlId,f=u.custom?[i,"custom-file-label"]:[n,"form-file-label"],h=f[0],b=f[1];return n=(0,v.vE)(h,b),r.default.createElement("label",(0,l.Z)({},o,{ref:t,htmlFor:s||p,className:d()(a,n),"data-browse":o["data-browse"]}))}));N.displayName="FormFileLabel";var I=N,T=r.default.forwardRef((function(e,t){var n=e.id,i=e.bsPrefix,a=e.bsCustomPrefix,s=e.disabled,o=void 0!==s&&s,u=e.isValid,p=void 0!==u&&u,h=e.isInvalid,b=void 0!==h&&h,y=e.feedbackTooltip,g=void 0!==y&&y,x=e.feedback,w=e.className,S=e.style,N=e.label,T=e.children,R=e.custom,k=e.lang,E=e["data-browse"],C=e.as,F=void 0===C?"div":C,j=e.inputAs,Z=void 0===j?"input":j,A=(0,c.Z)(e,["id","bsPrefix","bsCustomPrefix","disabled","isValid","isInvalid","feedbackTooltip","feedback","className","style","label","children","custom","lang","data-browse","as","inputAs"]),O=R?[a,"custom"]:[i,"form-file"],L=O[0],_=O[1];i=(0,v.vE)(L,_);var M=(0,r.useContext)(m).controlId,V=(0,r.useMemo)((function(){return{controlId:n||M,custom:R}}),[M,R,n]),q=null!=N&&!1!==N&&!T,D=r.default.createElement(P,(0,l.Z)({},A,{ref:t,isValid:p,isInvalid:b,disabled:o,as:Z,lang:k}));return r.default.createElement(m.Provider,{value:V},r.default.createElement(F,{style:S,className:d()(w,i,R&&"custom-file")},T||r.default.createElement(r.default.Fragment,null,R?r.default.createElement(r.default.Fragment,null,D,q&&r.default.createElement(I,{"data-browse":E},N)):r.default.createElement(r.default.Fragment,null,q&&r.default.createElement(I,null,N),D),(p||b)&&r.default.createElement(f,{type:p?"valid":"invalid",tooltip:g},x))))}));T.displayName="FormFile",T.Input=P,T.Label=I;var R=T,k=(n(42473),r.default.forwardRef((function(e,t){var n,i,a=e.bsPrefix,s=e.bsCustomPrefix,o=e.type,u=e.size,p=e.htmlSize,f=e.id,h=e.className,b=e.isValid,y=void 0!==b&&b,g=e.isInvalid,x=void 0!==g&&g,w=e.plaintext,S=e.readOnly,P=e.custom,N=e.as,I=void 0===N?"input":N,T=(0,c.Z)(e,["bsPrefix","bsCustomPrefix","type","size","htmlSize","id","className","isValid","isInvalid","plaintext","readOnly","custom","as"]),R=(0,r.useContext)(m).controlId,k=P?[s,"custom"]:[a,"form-control"],E=k[0],C=k[1];if(a=(0,v.vE)(E,C),w)(i={})[a+"-plaintext"]=!0,n=i;else if("file"===o){var F;(F={})[a+"-file"]=!0,n=F}else if("range"===o){var j;(j={})[a+"-range"]=!0,n=j}else if("select"===I&&P){var Z;(Z={})[a+"-select"]=!0,Z[a+"-select-"+u]=u,n=Z}else{var A;(A={})[a]=!0,A[a+"-"+u]=u,n=A}return r.default.createElement(I,(0,l.Z)({},T,{type:o,size:p,ref:t,readOnly:S,id:f||R,className:d()(h,n,y&&"is-valid",x&&"is-invalid")}))})));k.displayName="FormControl";var E=Object.assign(k,{Feedback:f}),C=r.default.forwardRef((function(e,t){var n=e.bsPrefix,i=e.className,a=e.children,s=e.controlId,o=e.as,u=void 0===o?"div":o,p=(0,c.Z)(e,["bsPrefix","className","children","controlId","as"]);n=(0,v.vE)(n,"form-group");var f=(0,r.useMemo)((function(){return{controlId:s}}),[s]);return r.default.createElement(m.Provider,{value:f},r.default.createElement(u,(0,l.Z)({},p,{ref:t,className:d()(i,n)}),a))}));C.displayName="FormGroup";var F=C,j=["xl","lg","md","sm","xs"],Z=r.default.forwardRef((function(e,t){var n=e.bsPrefix,i=e.className,a=e.as,s=void 0===a?"div":a,o=(0,c.Z)(e,["bsPrefix","className","as"]),u=(0,v.vE)(n,"col"),p=[],f=[];return j.forEach((function(e){var t,n,r,i=o[e];if(delete o[e],"object"==typeof i&&null!=i){var a=i.span;t=void 0===a||a,n=i.offset,r=i.order}else t=i;var s="xs"!==e?"-"+e:"";t&&p.push(!0===t?""+u+s:""+u+s+"-"+t),null!=r&&f.push("order"+s+"-"+r),null!=n&&f.push("offset"+s+"-"+n)})),p.length||p.push(u),r.default.createElement(s,(0,l.Z)({},o,{ref:t,className:d().apply(void 0,[i].concat(p,f))}))}));Z.displayName="Col";var A=Z,O=r.default.forwardRef((function(e,t){var n=e.as,i=void 0===n?"label":n,a=e.bsPrefix,s=e.column,o=e.srOnly,u=e.className,p=e.htmlFor,f=(0,c.Z)(e,["as","bsPrefix","column","srOnly","className","htmlFor"]),h=(0,r.useContext)(m).controlId;a=(0,v.vE)(a,"form-label");var b="col-form-label";"string"==typeof s&&(b=b+" "+b+"-"+s);var y=d()(u,a,o&&"sr-only",s&&b);return p=p||h,s?r.default.createElement(A,(0,l.Z)({as:"label",className:y,htmlFor:p},f)):r.default.createElement(i,(0,l.Z)({ref:t,className:y,htmlFor:p},f))}));O.displayName="FormLabel",O.defaultProps={column:!1,srOnly:!1};var L=O,_=r.default.forwardRef((function(e,t){var n=e.bsPrefix,i=e.className,a=e.as,s=void 0===a?"small":a,o=e.muted,u=(0,c.Z)(e,["bsPrefix","className","as","muted"]);return n=(0,v.vE)(n,"form-text"),r.default.createElement(s,(0,l.Z)({},u,{ref:t,className:d()(i,n,o&&"text-muted")}))}));_.displayName="FormText";var M=_,V=r.default.forwardRef((function(e,t){return r.default.createElement(w,(0,l.Z)({},e,{ref:t,type:"switch"}))}));V.displayName="Switch",V.Input=w.Input,V.Label=w.Label;var q=V,D=(0,n(38870).Z)("form-row"),J=r.default.forwardRef((function(e,t){var n=e.bsPrefix,i=e.inline,a=e.className,s=e.validated,o=e.as,u=void 0===o?"form":o,p=(0,c.Z)(e,["bsPrefix","inline","className","validated","as"]);return n=(0,v.vE)(n,"form"),r.default.createElement(u,(0,l.Z)({},p,{ref:t,className:d()(a,s&&"was-validated",i&&n+"-inline")}))}));J.displayName="Form",J.defaultProps={inline:!1},J.Row=D,J.Group=F,J.Control=E,J.Check=w,J.File=R,J.Switch=q,J.Label=L,J.Text=M;var B=J,z=n(85489),G=n(46594),U=n(92586);n(22916),n(93493);var W=(0,o.Z)((function(){var e=n(19584),t=(0,r.useState)(new Map),o=t[0],l=t[1],c=function(e,t){l(new Map(o.set(e,t)))},u=0,d=0,p=e.parts.map((function(e){u+=1,d=0;var t=e.part.questions.map((function(e){var t="part="+u+"&question="+(d+=1);return(0,U.tZ)(z.Z,{variant:"dark"},(0,U.tZ)(a.ZP,{height:"440px",width:"660px",theme:"my-light",language:"java",value:e,options:{tabSize:4,scrollBeyondLastLine:!1,readOnly:!0,wordWrap:"on"}}),(0,U.tZ)("p",null,"How generated comment affects understanding of the test case?"),(0,U.tZ)(B,null,(0,U.tZ)("div",{key:"inline-radio",className:"mb-3"},(0,U.tZ)(B.Check,{label:"It's easier to understand",name:t,type:"radio",id:"1",checked:1===o.get(t),onChange:function(e){return c(t,1)}}),(0,U.tZ)(B.Check,{label:"It's harder to understand",name:t,type:"radio",id:"2",checked:2===o.get(t),onChange:function(e){return c(t,2)}}),(0,U.tZ)(B.Check,{label:"Doesn't affect",name:t,type:"radio",id:"3",checked:3===o.get(t),onChange:function(e){return c(t,3)}}))))}));return(0,U.tZ)(z.Z,{variant:"secondary"},(0,U.tZ)("div",null,(0,U.tZ)("h2",null,"Part ",u),(0,U.tZ)("p",null,"The code of function"),(0,U.tZ)(a.ZP,{height:"440px",width:"660px",theme:"my-light",language:"java",value:e.part.function,options:{tabSize:4,scrollBeyondLastLine:!1,readOnly:!0,wordWrap:"on"}}),(0,U.tZ)("p",null,"Generated Tests for it:"),t))}));return(0,U.tZ)(i.Z,null,(0,U.tZ)(s.Z,{title:"UTBot Online"}),(0,U.tZ)("div",{style:{width:"100%",alignItems:"center",justifyContent:"center",height:"100%",display:"flex"}},(0,U.tZ)("div",{style:{flexDirection:"column",minWidth:"440px",height:"80%",width:"1000px",alignItems:"center",justifyContent:"center",display:"flex",marginTop:"10px",margiBottom:"10px"}},(0,U.tZ)("h1",null,"Survey"),(0,U.tZ)("p",null,"Help us to make our product the best!"),(0,U.tZ)("p",null,"There are functions and tests for them. Please rate the comment block above each test function."),p,(0,U.tZ)(G.Z,{variant:"primary",style:{marginTop:"5px",marginBottom:"25px",width:"125px"},onClick:function(){var t=0,n=0,r={parts:e.parts.map((function(e){t+=1,n=0;var r=e.part.questions.map((function(e){var r="part="+t+"&question="+(n+=1);return[e,o.get(r)]}));return{part:{function:e.part.function,questions:r}}}))};console.log(JSON.stringify(r))}},"Submit"))))})),H=W;void 0!==W&&W&&W===Object(W)&&Object.isExtensible(W)&&!W.hasOwnProperty("__filemeta")&&Object.defineProperty(W,"__filemeta",{configurable:!0,value:{name:"__DOCZ_DUMMY_EXPORT_DEFAULT",filename:"src/pages/survey.jsx"}})},19584:function(e){e.exports=JSON.parse('{"parts":[{"part":{"function":"Function1:\\n/**\\n * Returns {@code true} if {@code n} is a <a\\n * href=\\"http://mathworld.wolfram.com/PrimeNumber.html \\">prime number</a>: an integer <i>greater\\n * than one</i> that cannot be factored into a product of <i>smaller</i> positive integers.\\n * Returns {@code false} if {@code n} is zero, one, or a composite number (one which <i>can</i> be\\n * factored into smaller positive integers).\\n *\\n * <p>To test larger numbers, use {@link BigInteger#isProbablePrime}.\\n *\\n * @throws IllegalArgumentException if {@code n} is negative\\n * @since 20.0\\n */\\n@GwtIncompatible // TODO\\n@Beta\\npublic static boolean isPrime(long n) {\\n  if (n < 2) {\\n    checkNonNegative(\\" n\\", n);\\n    return false;\\n  }\\n  if (n == 2 || n == 3 || n == 5 || n == 7 || n == 11 || n == 13) {\\n    return true;\\n  }\\n\\n  if ((SIEVE_30 & (1 << (n % 30))) != 0) {\\n    return false;\\n  }\\n  if (n % 7 == 0 || n % 11 == 0 || n % 13 == 0) {\\n    return false;\\n  }\\n  if (n < 17 * 17) {\\n    return true;\\n  }\\n\\n  for (long[] baseSet : millerRabinBaseSets) {\\n    if (n <= baseSet[0]) {\\n      for (int i = 1; i < baseSet.length; i++) {\\n        if (!MillerRabinTester.test(baseSet[i], n)) {\\n          return false;\\n        }\\n      }\\n      return true;\\n    }\\n  }\\n  throw new AssertionError();\\n}","questions":["/**\\n * <pre>\\n * Test executes conditions:\\n *\\t   {@code (n < 2): False} \\n *     {@code (n == 2): True }\\n * returns from:\\n *     1st return statement: {@code return true; }\\n * </pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\"isPrime: n == 2 : False -> return true\\")\\npublic void testIsPrime_NEquals2() throws Throwable {\\n    boolean actual = LongMath.isPrime(2L);\\n\\n    assertTrue(actual);\\n}","**\\n * <pre>\\n * Test executes conditions:\\n *     {@code (n < 2): False}\\n *     {@code (n == 2): False },\\n *     {@code (n == 3): True }\\n * returns from:\\n *     1st return statement: {@code return true; }\\n * </pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\"isPrime: n == 3 : False -> return true\\")\\npublic void testIsPrime_NEquals3() throws Throwable {\\n    boolean actual = LongMath.isPrime(3L);\\n\\n    assertTrue(actual);\\n} ","/**\\n * <pre>\\n * Test executes conditions:\\n *     {@code (n == 2): False },\\n *     {@code (n == 3): False },\\n *     {@code (n == 5): False },\\n *     {@code (n == 7): False },\\n *     {@code (n == 11): True }\\n * returns from:\\n *     1st return statement: {@code return true; }\\n * </pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\"isPrime: n == 11 : False -> return true\\")\\npublic void testIsPrime_NEquals11() throws Throwable {\\n    boolean actual = LongMath.isPrime(11L);\\n\\n    assertTrue(actual);\\n}","/**\\n * <pre>\\n * Test executes conditions:\\n *     {@code (n < 2): True }\\n * invokes:\\n *     MathPreconditions::checkNonNegative once\\n * returns from:\\n *     1st return statement: {@code return false; }\\n * </pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\"isPrime: n < 2 : True -> return false\\")\\npublic void testIsPrime_NLessThan2() throws Throwable {\\n    boolean actual = LongMath.isPrime(0L);\\n\\n    assertFalse(actual);\\n} ","/**\\n * <pre>\\n * Test executes conditions:\\n *     {@code (n < 2): False },\\n *     {@code (n == 2): False },\\n *     {@code (n == 3): False },\\n *     {@code (n == 5): False },\\n *     {@code (n == 7): False },\\n *     {@code (n == 11): False },\\n *     {@code (n == 13): False },\\n *     {@code ((SIEVE_30 & (1 << (n % 30))) != 0): False },\\n *     {@code (n % 7 == 0): False },\\n *     {@code (n % 11 == 0): False },\\n *     {@code (n % 13 == 0): False },\\n *     {@code (n < 17 * 17): True }\\n * returns from:\\n *     2nd return statement: {@code return true; }\\n * </pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\"isPrime: (SIEVE_30 & (1 << (n % 30))) != 0 : False -> return true\\")\\npublic void testIsPrime_NLessThan17Multiply17() throws Throwable {\\n    boolean actual = LongMath.isPrime(241L);\\n\\n    assertTrue(actual);\\n} "]}},{"part":{"function":"public static boolean verifyAssignment(JSONObject assignObject) {\\n\\tif (assignObject == null) {\\n\\t\\tlog.error(\\"verifyAssignment: null\\");\\n\\t\\treturn false;\\n\\t}\\n\\n\\ttry {\\n\\n\\t\\tJSONArray assignments = assignObject.getJSONArray(\\"assignments\\");\\n\\t\\tif (!checkAssignContent(assignments)) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t} catch (Exception e) {\\n\\t\\tlog.error(\\"verifyAssignment: Exception {}\\", e.getMessage());\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\treturn true;\\n\\n} ","questions":["/**\\n * <pre>\\n * Test executes conditions:\\n *     {@code (assignObject == null): False }\\n * invokes:\\n *     JSONObject::getJSONArray once,\\n *     VerifyValid::checkAssignContent once\\n * executes conditions:\\n *     {@code (!checkAssignContent(assignments)): False }\\n * returns from: {@code return true; }\\n * </pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\\\verifyAssignment: assignObject == null : False -> return true\\\\)\\npublic void testVerifyAssignment_CheckAssignContent() throws Throwable {\\n\\tJSONObject assignObjectMock = mock(JSONObject.class);\\n\\tJSONArray jSONArrayMock = mock(JSONArray.class);\\n\\twhen(jSONArrayMock.size()).thenReturn(-2147483637, 0, 0);\\n\\twhen(assignObjectMock.getJSONArray(anyString())).thenReturn(jSONArrayMock);\\n\\n\\tboolean actual = VerifyValid.verifyAssignment(assignObjectMock);\\n\\n\\tassertTrue(actual);\\n}\\n "]}},{"part":{"function":"public void checkResourceStatusParam(String status) {\\n\\tif (status != null && !SERVICE_RESOURCE_STATUS_CONTENT.contains(status)) {\\n\\t\\tlog.error(\\\\check register resource: status[{}] error!\\\\, status);\\n\\t\\tthrow new IamServerException(new IamErrorMessage(PolicyServiceResourceErrorCode.INVALID_STATUS_VALUE, status));\\n\\t}\\n} ","questions":["/**\\n * <pre>\\n * Test executes conditions:\\n *     {@code (status != null): False }\\n * </pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\\\checkResourceStatusParam: -> status != null : False\\\\)\\npublic void testCheckResourceStatusParam_StatusEqualsNull() throws Throwable {\\n\\tVerifyPolicyServiceResourceService verifyPolicyServiceResourceService = ((VerifyPolicyServiceResourceService) createInstance(\\\\com.huawei.iam.pap.service.verify.VerifyPolicyServiceResourceService\\\\));\\n\\n\\tverifyPolicyServiceResourceService.checkResourceStatusParam(null);\\n} "]}},{"part":{"function":"public PolicyServiceResource verifyResource(String serviceId, String resourceId) {\\n\\tOptional<PolicyServiceResource> optional = policyServiceResourceRepository.findById(resourceId);\\n\\tif (!optional.isPresent() || !optional.get().getServiceId().equals(serviceId)) {\\n\\t\\tlog.error(\\\\resource not exist!\\\\);\\n\\t\\tIamErrorMessage errorMessage = new IamErrorMessage(IamErrorCode.IAM_SERVICE_RESOURCE_NOT_EXIST);\\n\\t\\tthrow new IamServerException(errorMessage);\\n\\t}\\n\\treturn optional.get();\\n}\\n ","questions":["/**\\n * <pre>\\n * Test executes conditions:\\n *     {@code (!optional.isPresent()): True }\\n *\\n * throws ClassCastException in: !optional.isPresent() || !optional.get().getServiceId().equals(serviceId)\\n * </pre>\\n */\\n@Test(expected = ClassCastException.class)\\n//@org.junit.jupiter.api.DisplayName(\\\\verifyResource: !optional.isPresent() || !optional.get().getServiceId().equals(serviceId) -> ThrowClassCastException\\\\)\\npublic void testVerifyResource_ThrowClassCastException() throws Throwable {\\n\\tVerifyAvailabilityService verifyAvailabilityService = ((VerifyAvailabilityService) createInstance(\\\\com.huawei.iam.pap.service.verify.VerifyAvailabilityService\\\\));\\n\\tPolicyServiceResourceRepository policyServiceResourceRepositoryMock = mock(PolicyServiceResourceRepository.class);\\n\\tOptional optional = ((Optional) createInstance(\\\\java.util.Optional\\\\));\\n\\tbyte[] byteArray = new byte[0];\\n\\tsetField(optional, \\\\value\\\\, byteArray);\\n\\twhen(policyServiceResourceRepositoryMock.findById(anyString())).thenReturn(optional);\\n\\tsetField(verifyAvailabilityService, \\\\policyServiceResourceRepository\\\\, policyServiceResourceRepositoryMock);\\n\\n\\tverifyAvailabilityService.verifyResource(null, null);\\n}\\n ","/**\\n * <pre>\\n * Test executes conditions:\\n *     {@code (!optional.isPresent()): True }\\n * invokes:\\n *     PolicyServiceResource::getServiceId once\\n *\\n * throws NullPointerException in: !optional.isPresent() || !optional.get().getServiceId().equals(serviceId)\\n * </pre>\\n */\\n@Test(expected = NullPointerException.class)\\n//@org.junit.jupiter.api.DisplayName(\\\\verifyResource: !optional.isPresent() || !optional.get().getServiceId().equals(serviceId) -> ThrowNullPointerException\\\\)\\npublic void testVerifyResource_PolicyServiceResourceGetServiceId() throws Throwable {\\n\\tVerifyAvailabilityService verifyAvailabilityService = ((VerifyAvailabilityService) createInstance(\\\\com.huawei.iam.pap.service.verify.VerifyAvailabilityService\\\\));\\n\\tPolicyServiceResourceRepository policyServiceResourceRepositoryMock = mock(PolicyServiceResourceRepository.class);\\n\\tOptional optional = ((Optional) createInstance(\\\\java.util.Optional\\\\));\\n\\tPolicyServiceResource policyServiceResource = ((PolicyServiceResource) createInstance(\\\\com.huawei.iam.pap.mybatis.model.PolicyServiceResource\\\\));\\n\\tsetField(policyServiceResource, \\\\serviceId\\\\, null);\\n\\tsetField(optional, \\\\value\\\\, policyServiceResource);\\n\\twhen(policyServiceResourceRepositoryMock.findById(anyString())).thenReturn(optional);\\n\\tsetField(verifyAvailabilityService, \\\\policyServiceResourceRepository\\\\, policyServiceResourceRepositoryMock);\\n\\n\\tverifyAvailabilityService.verifyResource(null, null);\\n} "]}},{"part":{"function":"public boolean iamPdpCheck(Token ctx) {\\n\\tboolean pdpAuthCheck = false;\\n\\n\\tList<Role> roles = ctx.getRoles();\\n\\n\\tfor (Role role : roles) {\\n\\t\\tif (role.getName().equals(IamServerConstant.IAM_OP_FINE_GRAINED)) {\\n\\t\\t\\tpdpAuthCheck = true;\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\treturn pdpAuthCheck;\\n} ","questions":["/**\\n * <pre>\\n * Test does not iterate {@code for(Role role: roles) }, returns from: {@code return pdpAuthCheck; }\\n * </pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\\\iamPdpCheck: -> return pdpAuthCheck\\\\)\\npublic void testIamPdpCheck_ReturnPdpAuthCheck() throws Throwable {\\n\\tPdpService pdpService = ((PdpService) createInstance(\\\\com.huawei.iam.pap.service.pdp.PdpService\\\\));\\n\\tToken ctxMock = mock(Token.class);\\n\\tArrayList arrayList = new ArrayList();\\n\\twhen(ctxMock.getRoles()).thenReturn(arrayList);\\n\\n\\tboolean actual = pdpService.iamPdpCheck(ctxMock);\\n\\n\\tassertFalse(actual);\\n} ","/**\\n * <pre>\\n * Test iterates the loop {@code for(Role role: roles) } once,\\n *     inside this loop, the test executes conditions:\\n *     {@code (role.getName().equals(IamServerConstant.IAM_OP_FINE_GRAINED)): True }\\n * Test then returns from: {@code return pdpAuthCheck; }\\n * </pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\\\iamPdpCheck: role.getName().equals(IamServerConstant.IAM_OP_FINE_GRAINED) : True -> return pdpAuthCheck\\\\)\\npublic void testIamPdpCheck_RolegetNameEquals() throws Throwable {\\n\\tPdpService pdpService = ((PdpService) createInstance(\\\\com.huawei.iam.pap.service.pdp.PdpService\\\\));\\n\\tToken ctxMock = mock(Token.class);\\n\\tArrayList arrayList = new ArrayList();\\n\\tRole role = ((Role) createInstance(\\\\com.huawei.iam.tokenlib.entity.Role\\\\));\\n\\tsetField(role, \\\\name\\\\, \\\\op_fine_grained\\\\);\\n\\tarrayList.add(role);\\n\\tarrayList.add(null);\\n\\tarrayList.add(null);\\n\\twhen(ctxMock.getRoles()).thenReturn(arrayList);\\n\\n\\tboolean actual = pdpService.iamPdpCheck(ctxMock);\\n\\n\\tassertTrue(actual);\\n} "]}},{"part":{"function":"public int lookupSwitch(int x) {\\n\\tswitch (x) {\\n\\t\\tcase 0:\\n\\t\\t\\treturn 0;\\n\\t\\tcase 10: // fall-through\\n\\t\\tcase 20:\\n\\t\\t\\treturn 20;\\n\\t\\tcase 30:\\n\\t\\t\\treturn 30;\\n\\t\\tdefault:\\n\\t\\t\\treturn -1;\\n\\t}\\n}\\n ","questions":["/**\\n * <pre>\\n * Test activates switch case: {@code 0 }, returns from: {@code return 0; }\\n * </pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\\\lookupSwitch: switch(x) case: 0 -> return 0\\\\)\\npublic void testLookupSwitch_ReturnZero() throws Throwable {\\n\\tSwitch switch1 = new Switch();\\n\\n\\tint actual = switch1.lookupSwitch(0);\\n\\n\\tassertEquals(0, actual);\\n}\\n "]}},{"part":{"function":"public int loopInsideLoop(int x) {\\n\\tfor (int i = x - 5; i < x; i++) {\\n\\t\\tif (i < 0) {\\n\\t\\t\\treturn 2;\\n\\t\\t} else {\\n\\t\\t\\tfor (int j = i; j < x + i; j++) {\\n\\t\\t\\t\\tif (j == 7) {\\n\\t\\t\\t\\t\\treturn 1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn -1;\\n} ","questions":["/**\\n * <pre>\\n * Test iterates the loop {@code for(int i = x - 5; i < x; i++) } once,\\n *     inside this loop, the test executes conditions:\\n *     {@code (i < 0): True }\\n * returns from: {@code return 2; }</pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\\\loopInsideLoop: i < 0 : True -> return 2\\\\)\\npublic void testLoopInsideLoop_ILessThanZero() throws Throwable {\\n\\tCycles cycles = new Cycles();\\n\\n\\tint actual = cycles.loopInsideLoop(0);\\n\\n\\tassertEquals(2, actual);\\n} ","/**\\n * <pre>\\n * Test iterates the loop {@code for(int i = x - 5; i < x; i++) } once,\\n *     inside this loop, the test executes conditions:\\n *     {@code (i < 0): False }\\n * iterates the loop {@code for(int j = i; j < x + i; j++) } once,\\n *         inside this loop, the test executes conditions:\\n *     {@code (j == 7): True }\\n * returns from: {@code return 1; }</pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\\\loopInsideLoop: i < 0 : False -> return 1\\\\)\\npublic void testLoopInsideLoop_JEquals7() throws Throwable {\\n\\tCycles cycles = new Cycles();\\n\\n\\tint actual = cycles.loopInsideLoop(12);\\n\\n\\tassertEquals(1, actual);\\n} "]}},{"part":{"function":"public int fib(int n) {\\n\\tif (n < 0) throw new IllegalArgumentException();\\n\\tif (n == 0) return 0;\\n\\tif (n == 1) return 1;\\n\\treturn fib(n - 1) + fib(n - 2);\\n}\\n ","questions":["/**\\n * <pre>\\n * Test executes conditions:\\n *     {@code (n == 0): True }\\n * returns from: {@code return 0; }\\n * </pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\\\fib: n == 0 : True -> return 0\\\\)\\npublic void testFib_ReturnZero() throws Throwable {\\n\\tRecursion recursion = new Recursion();\\n\\n\\tint actual = recursion.fib(0);\\n\\n\\tassertEquals(0, actual);\\n}\\n ","/**\\n * <pre>\\n * Test executes conditions:\\n *     {@code (n == 1): False }\\n * triggers the recursion of fib, where the test executes conditions:\\n *     {@code (n == 1): True }\\n * returns from: {@code return 1; }\\n *\\n * Test afterwards triggers the recursion of fib, where the test executes conditions:\\n *     {@code (n == 0): True }\\n * returns from: {@code return 0; }\\n *\\n * Test next returns from: {@code return fib(n - 1) + fib(n - 2); }\\n * </pre>\\n */\\n@Test\\n//@org.junit.jupiter.api.DisplayName(\\\\fib: return 1 -> return 0\\\\)\\npublic void testFib_NNotEquals1() throws Throwable {\\n\\tRecursion recursion = new Recursion();\\n\\n\\tint actual = recursion.fib(2);\\n\\n\\tassertEquals(1, actual);\\n} "]}}]}')}}]);
//# sourceMappingURL=component---src-pages-survey-jsx-5890cb8f023acdfb69c9.js.map