{"version":3,"file":"component---src-docs-usage-status-bar-icons-md-e9a18bf25a96897b07ea.js","mappings":"8TAWaA,EAAe,Q,oNAC5B,IAAMC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAI5E,cACE,GAAM,mBADR,oBAGA,uJACA,eAAKC,IAAKC,EAAAA,EAAcC,UAAU,YAClC,cACE,GAAM,qBADR,sBAGA,6IACyB,kBAAQC,WAAW,KAAnB,MADzB,MACqE,eAAKH,IAAKI,EAAAA,EAAiBC,MAAO,CACnGC,QAAS,gBACRJ,UAAU,WAHf,mCAGyD,eAAKF,IAAKO,EAAAA,EAAoBF,MAAO,CAC1FC,QAAS,gBACRJ,UAAU,WALf,4EAOA,cACE,GAAM,cADR,eAGA,6IACA,cACE,GAAM,gBADR,iBAGA,iGAAmF,kBAAQC,WAAW,KAAnB,SAAnF,MAAkI,kBAAQA,WAAW,KAAnB,QAAlI,SAAmL,kBAAQA,WAAW,KAAnB,QAAnL,M,2MAKJP,EAAWY,gBAAiB","sources":["webpack://unittestbot-web/./src/docs/usage/status-bar-icons.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/user/unittestbot.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport StatusbarImg from '/resources/images/statusbar.png';\nimport ConnectionOkImg from '/resources/images/connectionOK.png';\nimport ConnectionAlertImg from '/resources/images/connectionALERT.png';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"statusbar-icons\"\n    }}>{`Statusbar Icons`}</h1>\n    <p>{`Before you start working with UnitTestBot, it's worth to pay attention to the IDE's status bar and UTBot-specific controls there:`}</p>\n    <img src={StatusbarImg} className=\"docImg\" />\n    <h2 {...{\n      \"id\": \"connection-status\"\n    }}>{`Connection Status`}</h2>\n    <p>{`Connection status indicates whether the client and the server are established a connection.\nIf the connection is lost, `}<strong parentName=\"p\">{`OK`}</strong>{` (`}<img src={ConnectionOkImg} style={{\n        display: 'inline-block'\n      }} className=\"docImg\" />) status changes to **ALERT** (<img src={ConnectionAlertImg} style={{\n        display: 'inline-block'\n      }} className=\"docImg\" />{`).\nIn this case you need to check if UTBot container is still running.`}</p>\n    <h2 {...{\n      \"id\": \"five-rules\"\n    }}>{`Five Rules`}</h2>\n    <p>{`This checkbox switches the way generated tests are formatted. Please refer to a corresponding section for more details.`}</p>\n    <h2 {...{\n      \"id\": \"log-settings\"\n    }}>{`Log Settings`}</h2>\n    <p>{`You also can control how verbose UnitTestBot Logs are. Supported levels are `}<strong parentName=\"p\">{`DEBUG`}</strong>{`, `}<strong parentName=\"p\">{`INFO`}</strong>{` and `}<strong parentName=\"p\">{`WARN`}</strong>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","src","StatusbarImg","className","parentName","ConnectionOkImg","style","display","ConnectionAlertImg","isMDXComponent"],"sourceRoot":""}