{
  "javaHome": {
    "imagineTitle": "Imagine you don't have to write tests.",
    "tryOnlineText": "Try UnitTestBot online demo",
    "watchHowWorksText": "Watch how it works",
    "testsGenText": "But you still have a perfect bug detector for your code.<br>And no false positives among bugs.<br>Tests are generated automagically — with the highest code coverage,<br>fine-tuned mocking, and human-readable test descriptions.<br>Sounds fantastic? No more.",
    "testsGenAdvantagesTitlePart1": "Yet another test template tool?",
    "testsGenAdvantagesTitlePart2": "Quite the opposite.",
    "testsGenAdvantagesText": "While a test template tool gives you just an outline,<br>UnitTestBot generates ready-to-use test cases —<br>with valid inputs, method bodies, assertions, and comments.",
    "checkGuideText": "Install, generate, run: check the quick guide",
    "utbotAdvantagesTitle": "Test the code all over.",
    "utbotAdvantagesText": "UnitTestBot has <span style=\"color:#F7931E;\">a dynamic symbolic execution</span> engine in its core, complemented with a smart <span style=\"color:#F7931E;\">fuzzing</span> technique. Together they can explore program execution paths, covering as many of them as possible while keeping <span style=\"color:#F7931E;\">test suite minimized.</span>",
    "learnMoreText": "Learn more about UnitTestBot coverage",
    "findBugsNooneCanTitle": "Find bugs no one can catch.",
    "eliminateFalsePositivesTitle": "Eliminate false positives.",
    "findBugsNooneCanText": "UnitTestBot can uncover bugs hidden deeply in an interprocedural control flow graph. All the found bugs are indeed real — zero false positive rate is guaranteed.",
    "howToUseResultText": "Learn how to get use of UnitTestBot results",
    "mocksTitlePart1": "Mock properly.",
    "mocksTitlePart2": "Static methods as well.",
    "mocksText": "Want to mock I/O operations, random number generator or other modules? UnitTestBot provides you with both default and fine adjustment options for your mocks.",
    "mockingSettingsText": "Get to know mocking settings in UnitTestBot",
    "humanReadableTitle": "UnitTestBot stands for \"human-readable\".",
    "humanReadableText": "UnitTestBot represents all the test descriptions in a human-readable format. The intelligible test method names and comments help you to control the whole testing process. Test failed? The description refers you to points of interest in execution paths.",
    "getBetterTestDescriptionText": "See how to get the most out of test descriptions",
    "capableForYourNeedText": "Capable for every tech you need.",
    "capableForEveryText": "UnitTestBot for Java and Kotlin supports the latest JDKs, JUnit 4, JUnit 5, TestNG, Mockito and works with all popular operational systems.<br>You can also try <a href=\"https://www.utbot.org/cpp\">UnitTestBot for C/C++</a>. <a href=\"https://www.utbot.org/python\">UnitTestBot for Python</a>, <a href=\"https://www.utbot.org/go\">Go</a>, and <a href=\"https://www.utbot.org/js\">JavaScript</a> are under development. Stay tuned!",
    "supportedTechnologiesText": "Check supported technologies"
  },
  "cppHome": {
    "utbotCppTitle": "UnitTestBot for C/C++.",
    "changesExperienceTitle": "Changes your experience of unit testing.",
    "utbotCppDescriptionText": "Powered by the <a href=\"https://github.com/UnitTestBot/klee\">enhanced KLEE symbolic execution engine</a>, UnitTestBot for C/C++ is here to overcome the expectations for unit testing: automatically generated <i>ready-to-use</i> tests with inputs and method bodies, error and regression suites with maximum coverage, testing code containing almost any C feature, auto-generated stubs — all wrapped in a user-friendly interface.",
    "perfectTestingTitle": "Make testing fast, reliable and effortless",
    "whyUtbotIsCapableText": "Get the most out of UnitTestBot for C/C++ with the detailed <a href=\"https://www.utbot.org/docs/cpp/\">user guide</a>.",
    "checkForBugsTitle": "Check for bugs, commit successful tests",
    "fixateCurrentBehaviorText": "UnitTestBot for C/C++ provides you both with the error and the regression suite.<br>Find invalid code fragments, fixate current behavior, detect the regressions or update tests if needed.",
    "specifyTestingAreaTitle": "Create tests for a specific line, a file, a function or a project",
    "testsForAssertionsText": "It's even possible to generate a test for the assertion — the test that fails the selected assertion.<br>Ask for a test with a prompted result: generate a test that forces the selected function to return a specific value (if possible).",
    "easilyConfigureTitle": "Easily configure",
    "easilyConfigureText": "UnitTestBot for C/C++ makes generating tests straightforward and intuitive. It can automatically configure your project and get all the necessary information — you just need a CMakeLists.txt file or a build script.",
    "findUtbotForCppTitle": "Find your UnitTestBot for C/C++",
    "findUtbotForCppText": "UnitTestBot for C/C++ is based on client-server architecture. Run server on Ubuntu and connect to it using <a href=\"https://www.utbot.org/docs/cpp/vscode-plugin\">VS Code extension</a> or <a href=\"https://www.utbot.org/docs/cpp/clion-plugin\">CLion plugin</a> for Windows/Linux, or try <a href=\"https://www.utbot.org/docs/cpp/cli\">command-line interface</a> (available for Ubuntu only).",
    "stubsTitle": "Get use of auto-generated stubs",
    "stubsText": "UnitTestBot for C/C++ detects whether the function is called from the other module and can automatically <a href=\"https://www.utbot.org/docs/cpp/stubs\">stub</a> it. These stubs are customizable, and you can turn them off if needed.",
    "supportedSyntaxTitle": "Test the code with the language feature you need",
    "supportedSyntaxText": "Check <a href=\"https://github.com/UnitTestBot/UTBotCpp/wiki/c-syntax\">supported C</a> and <a href=\"https://github.com/UnitTestBot/UTBotCpp/wiki/cpp-syntax\">C++ syntax</a> with generated test examples.",
    "useBuildSystemTitle": "Use CMake or Make",
    "useBuildSystemText": "Choose the build system suitable for your project.",
    "googleTestFormatTitle": "Get tests in Google Test format",
    "googleTestFormatText": "One of the most popular test formats fits to both C and C++ code."
  },
  "pythonHome": {
    "utbotPythonTitle": "UnitTestBot for Python.",
    "almostReady": "Almost ready.",
    "utbotPythonText": "UnitTestBot for Python code is in development.<br>Wait a while for the next release."
  },
  "jsHome": {
    "utbotJsTitle": "UnitTestBot for JavaScript.",
    "almostReady": "Almost ready.",
    "utbotJsText": "UnitTestBot for JavaScript code is in development.<br>Wait a while for the next release."
  },
  "goHome": {
    "utbotGoTitle": "UnitTestBot for Go.",
    "almostReady": "Almost ready.",
    "utbotGoText": "UnitTestBot for Go code is in development.<br>Wait a while for the next release."
  },
  "docs": {
    "cdocsTitle": "UnitTestBot C/C++",
    "javadocsTitle": "UnitTestBot Java",
    "cdocsText": "Documentation for UnitTestBot C/C++ can be accessed via link below.",
    "cdocsLink": "Documentation for UnitTestBot C/C++",
    "javadocsText": " Documentation for UnitTestBot Java can be accessed via link below.",
    "javadocsLink": "Documentation for UnitTestBot Java",
    "javadocsMainTitle": "UnitTestBot Java Documentation",
    "progress": "In progress",
    "goHome": "Go to the home page"
  },
  "research": {
    "conferencesAndCompetitionsTitle": "Conferences and competitions",
    "utbotJavaTitle": "UnitTestBot for Java",
    "sbst2022Title": "<b>Competition</b> | <a href=\"https://sbst22.github.io/\">IEEE/ACM International Workshop on Search-Based Software Testing (SBST)</a> | 2022 | <b>En</b>",
    "sbst2022ArticleTitle": "<a href=\"https://ieeexplore.ieee.org/document/9810769/\">UTBot Java at the SBST2022 Tool Competition</a>",
    "sbst2022ArticlesAuthors": "Dmitry Ivanov, Alexey Menshutin, Denis Fokin, Yury Kamenev, Sergey Pospelov, Egor Kulikov, Nikita Stroganov",
    "sbst2022ToolCompetitionTitle": "<a href=\"https://ieeexplore.ieee.org/document/9810771>SBST Tool Competition 2022</a>",
    "generalOverview": "General overview"
  },
  "search": {
    "title": "Search",
    "placeholder": "Type to search..."
  },
  "install": {
    "mainPart1": "<b>UnitTestBot</b> project provides users with 2 engines generating tests:<ul><li>UnitTestBot C/C++ <i>(requires Ubuntu 18.04 or higher)</i></li><li>UnitTestBot Java <i>(tested on Win64, Linux 64)</i></li><ul>",
    "mainPart2": "UTBot offers convenient ways to interact with its functionality. Users can install and use corresponding plugins:<br><ul><b><li>Visual Studio Code</b> plugin for <b>C/C++</b> languages (see <a href=\"https://github.com/UnitTestBot/UTBotCpp/wiki/install-vscode-plugin\">installation guide</a>)</li><li><b>IntelliJ IDEA</b> plugin for <b>Java</b> language (see <a href=\"https://github.com/UnitTestBot/UTBotJava/wiki/intellij-idea-plugin\">installation guide</a>)</li></ul>",
    "alert": "<b>UnitTestBot C/C++</b> supports only <b>small subset</b> of <b>C++</b> for now",
    "utbotCpp": "UnitTestBot C/C++",
    "utbotJava": "UnitTestBot Java",
    "latestStable": "Latest stable",
    "cpp": "UnitTestBot C/C++",
    "java": "UnitTestBot Java",
    "get": "Get",
    "getIdeaPlugin": "Get IntelliJ IDEA Plugin",
    "javaGuide": "Installation Guide"
  },
  "utbot": {
    "alertCpp": "<small>Only small subset of C++ is supported</small>",
    "alertNew": "<small>Experimental feature</small>"
  },
  "aboutUs": {
    "whoWeAreText": "We are a team of researchers from Saint Petersburg.<br><br>We are crazy about mathematics and programming. We love taking part in software testing competitions. To be in touch with the high-end science we collaborate with the universities:",
    "spbu": "Saint Petersburg State University",
    "hse": "HSE University",
    "itmo": "ITMO University",
    "spbpu": "Saint Petersburg Polytechnic University",
    "whatWeDevelopText": "Though all these things may sound nerdy, we believe we develop a useful tool for real-life programmers. We try to make UnitTestBot effective and user-friendly — so that we are happy with it when we use it ourselves. And we welcome you to join us in developing UnitTestBot!<br><br><a href = 'mailto: support@utbot.org'>Contact us</a> directly to ask a question, share your ideas or give us feedback — we will be glad to hear from you!",
    "visitGitHubText": "Visit our <a href=\"https://github.com/UnitTestBot/\">GitHub</a> page and feel free to contribute!",
    "email": "<a href = 'mailto: support@utbot.org'>Send email</a>"
  },
  "header": {
    "javaArea": "Java/Kotlin",
    "cppArea": "C/C++",
    "pythonArea": "Python",
    "goArea": "Go",
    "javaScriptArea": "JavaScript",
    "demo": "Demo",
    "research": "Research",
    "aboutUs": "About us",
    "download": "Download",
    "searchPlaceholder": "Search...",
    "fromGitHub": "From GitHub",
    "fromJetBrainsMarkerplace": "From JetBrains Marketplace",
    "userGuide": "User guide"
  }
}
