{
    "home": {
        "pageTitle": "UnitTestBot",
        "slogan": "Unit testing made easier",
        "install": "Install now",
        "more": "Read more",
        "tryOnline": "Try online",
        "whatis": "What is UnitTestBot?",
        "testsGenerationTitle": "Tests Generation",
        "codeCoverageTitle": "Code Coverage",
        "errorsDetectionTitle": "Errors Detection",
        "testsGenerationText": "<b>UnitTestBot</b> generates test cases by code, trying to cover maximum statements and execution paths. We treat source code as source of truth assuming that behavior is correct and corresponds to initial user demand. Generated tests are placed in so-called <b>regression suite</b>. Thus, we <i>fixate</i> current behavior by generated test cases. Using UnitTestBot developers obtain <b>full control</b> of their code. No future change can break the code without being noticed once it's covered with tests generated by UTBot.  This way, modifications made by developers to an existing code are much safer. Hence, with the help of generated unit tests, UTBot provides dramatic code quality improvement.",
        "codeCoverageText": "<b>UnitTestBot</b> attempts to generate test cases, such that they both <i>maximize</i> code coverage and <i>minimize</i> number of tests at the same time. So, if a developer drops any test case from generated suite, the percentage of code coverage will decrease. UnitTestBot doesn't endeavour to cover every execution path of program (so-called <i>path coverage</i>), as the number of such paths is often infinite due to loops and recursion. Instead, UTBot aims to maximize <b>statement</b> and <b>branch</b> coverage, commonly used in coverage quality assessment tools. Besides, UnitTestBot provides a convenient way to monitor code coverage via gutter coloring of the code editor you are using.",
        "errorsDetectionText": "<b>UnitTestBot</b> is not only able to fixate an existing code, but it also helps to find real bugs in your project. Some code fragments might be invalid, while developers don't know about it. The notorious examples are <i>buffer overflows</i>, <i>assertion failures</i>, <i>segmentation faults</i>, etc. In such scenarios, UTBot can find an execution path that leads to critical problem, and then create special test case that is added to so-called <b>error suite</b>. While all tests from <i>regression suite</i> are <span style=\"color:green;\"}}><b>green</b></span> right after their generation, tests from <i>error suite</i> are <span style=\"color:red;\"><b>red</b></span> as they fail. Such tests generated by UnitTestBot are a convenient way to discover critical problems as soon as possible."
    },
    "docs": {
        "cdocsTitle":"UnitTestBot C/C++",
        "cdocsText": "Documentation for UnitTestBot C/C++ can be accessed via link below.",
        "cdocsLink": "Documentation for UnitTestBot C/C++",
        "javadocsTitle":"UnitTestBot Java",
        "javadocsText": " Documentation for UnitTestBot Java can be accessed via link below.",
        "javadocsLink": "Documentation for UnitTestBot Java",
        "javadocsMainTitle": "UnitTestBot Java Documentation",
        "progress": "In progress",
        "goHome": "Go to the home page" 
    },
    "search": {
        "title": "Search",
        "placeholder": "Type to search..."

    },
    "install": {
        "mainPart1": "UnitTestBot can be used for C language and Java. In both cases, UnitTestBot is implemented as an extension for another Code Editor/IDE.",
        "mainPart2": "If you use <b>C language</b>, then you need UnitTestBot C/C++ version, that works together with <b>Visual Studio Code</b>. <br/> In case of <b>Java</b>, you can use UnitTestBot as a plugin for <b>Intellij IDEA</b>.",
        "cppAlert": "<b>UnitTestBot C/C++</b> supports only C language for now. C++ language support is coming in <b>December 2021</b>.",
        "cppPart1": "UnitTestBot for C/C++ is delivered in two parts: server and client.",
        "cppPart2": "Server is presented as a docker container. Server part of UnitTestBot C/C++ handles all the work in terms of tests generation.",
        "cppPart3": "VS Code extension serves as a client. UTBot VS Code Plugin provides friendly and intuitive user interface. It interacts with server via gRPC channel.",
        "cppGuide": "Installation Guide",
        "javaAlert": "<b>UnitTestBot Java</b> is coming in <b>December 2021</b>.",
        "javaPart1": "UnitTestBot for Java is delivered as a plugin for IntelliJ IDEA.",
        "release": "Release",
        "nightly": "Nightly",
        "cpp": "UnitTestBot C/C++",
        "cppReleaseVersion": "UTBOT_CPP_RELEASE_VERSION",
        "cppSnapshotVersion": "UTBOT_CPP_SNAPSHOT_VERSION",
        "java": "UnitTestBot Java",
        "javaSnapshotVersion": "UTBOT_JAVA_SNAPSHOT_VERSION",
        "getvsix": "Get VSCode Plugin",
        "getserver": "Get Server Installer",
        "getIdeaPlugin" : "Get IntelliJ IDEA Plugin",
        "javaGuide": "Installation Guide"
    },
    "contacts": {
        "contactTitle": "Contact Us",
        "description": "In case you have any questions or would like to share your feedback, do not hesitate to contact us via e-mail:",
        "ivanov": "<b>Dmitry Ivanov</b>: Software Analysis Team Leader, Saint Petersburg RRI. <a href = 'mailto: dmitry.ivanov@huawei.com'>Send email</a>",
        "qianxiang": "<b>Qianxiang Wang</b>: Professor, Saint Petersburg RRI. <a href = 'mailto: wangqianxiang@huawei.com'>Send email</a>",
        "stromov": "<b>Gleb Stromov</b>: Senior Software Engineer, Saint Petersburg RRI. <a href = 'mailto: stromov.gleb1@huawei.com'>Send email</a>",

        "issueTracker": "CodeHub Issue Tracker",
        "submitProblem": "Submit your problem via"
        },
    "header": {
        "docs": "Docs",
        "cdocs": "UTBot C/C++",
        "javadocs": "UTBot Java",
        "install" : "Install",
        "contact": "Contact Us",
        "faq": "FAQ",
        "lang": "Languages",
        "english": "English",
        "chinese": "Chinese",
        "searchPlaceholder": "Type to search...",
        "search": "Search",
        "gitlab": "Gitlab",
        "codehub": "CodeHub"
    }
}