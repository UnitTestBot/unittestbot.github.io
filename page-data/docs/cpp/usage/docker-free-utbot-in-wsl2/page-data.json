{"componentChunkName":"component---src-templates-docs-page-jsx","path":"/docs/cpp/usage/docker-free-utbot-in-wsl2","result":{"data":{"markdownRemark":{"html":"<h1>Docker-free UTBot in WSL2</h1>\n<p>If you have a project on Windows you may like to use lightweight solution for the UTBot that is based on WSL2 virtualization approach.</p>\n<p>Please, be sure that you have an ability to install the WSL2 in you Windows 10 or 11.\nMaybe you need the upgrade Windows 10 to the latest version\nand the <a href=\"https://support.microsoft.com/en-us/topic/windows-10-update-assistant-3550dfb2-a015-7765-12ea-fba2ac36fb3f\">Windows 10 Upgrade Assistance</a>\nis the best way to go.</p>\n<p>In the simplest variant you need to create an empty WSL2 container with recommended version of Ubuntu (currently it is <strong>Ubuntu 18.04</strong>)\nThat can be done by command (may need administrator privileges):</p>\n<pre><code>PS C:\\Users\\user>wsl --install -d Ubuntu-18.04\n</code></pre>\n<p>After the installation you have initial setup for WSL2 user (just for unification we recommend name it 'utbot'):</p>\n<pre><code class=\"language-bash\">Installing, this may take a few minutes...\nPlease create a default UNIX user account. The username does not need to match your Windows username.\nFor more information visit: https://aka.ms/wslusers\nEnter new UNIX username: utbot\nEnter new UNIX password:\nRetype new UNIX password:\npasswd: password updated successfully\nInstallation successful!\nTo run a command as administrator (user \"root\"), use \"sudo &#x3C;command>\".\nSee \"man sudo_root\" for details.\n\nutbot@userhwlp:~$\n</code></pre>\n<p>At this point the WSL2 initial container installation is finished.\nBy default new UTBot WSL2 container is called <strong>Ubuntu-18.04</strong>.</p>\n<pre><code class=\"language-PowerShell\">PS C:\\Users\\u00663918> wsl --list --verbose\n  NAME                   STATE           VERSION\n  Ubuntu-18.04           Running         2      &#x3C;---------- Newly installed WSL2 container   \n</code></pre>\n<p>Now you need to install the UTBot server in it.</p>\n<p>For the common case this step is described in the <a href=\"https://github.com/UnitTestBot/UTBotCpp/wiki/install-server\">install server</a>\ndocument, but this simplified WSL2 installation has some specifics and is described below.</p>\n<h2>Step by step UTBot server installation and the first run</h2>\n<p><strong>Hint</strong>: you can skip this section by running the script from home <strong>utbot</strong> folder:</p>\n<pre><code class=\"language-bash\">#!/bin/bash\n\n#please, change UTBOT_VERSION value to the latest version from https://github.com/UnitTestBot/UTBotCpp/releases\nexport UTBOT_VERSION=\"1.0.167\" \n\nmkdir utbotcpp\ncd utbotcpp\nwget https://github.com/UnitTestBot/UTBotCpp/releases/download/v$UTBOT_VERSION/utbot-release-$UTBOT_VERSION.zip\nsudo apt-get install unzip\nunzip utbot-release-$UTBOT_VERSION.zip\ntar -xvzf utbot_distr.tar.gz\nchmod +x unpack_and_run_utbot.sh \nsudo ./unpack_and_run_utbot.sh\n</code></pre>\n<ul>\n<li>You need to check the latest version of UTBot from <a href=\"https://github.com/UnitTestBot/UTBotCpp/releases\">release artifacts</a>.\nPlease, find the URL of artifacts that is taken from <strong>Assets</strong>. As an example: <a href=\"https://github.com/UnitTestBot/UTBotCpp/releases/download/v1.0.167/utbot-release-1.0.167.zip\">https://github.com/UnitTestBot/UTBotCpp/releases/download/v1.0.167/utbot-release-1.0.167.zip</a>.\nHere \"1.0.167\" is the latest version at the time of writing.</li>\n<li>Make the directory for UTBotCpp\n<pre><code class=\"language-bash\">utbot@userhwlp:~$ mkdir utbotcpp \n</code></pre>\n</li>\n<li>Go into created directory utbotcpp\n<pre><code class=\"language-bash\">utbot@userhwlp:~$ cd utbotcpp \n</code></pre>\n</li>\n<li>Download archive from release artifacts\n<pre><code class=\"language-bash\">utbot@userhwlp:~/utbotcpp$ wget https://github.com/UnitTestBot/UTBotCpp/releases/download/v1.0.167/utbot-release-1.0.167.zip\n</code></pre>\n</li>\n<li>Unarchive downloaded zip (install unzip <code>sudo apt-get install unzip</code> first!)\n<pre><code class=\"language-bash\">utbot@userhwlp:~/utbotcpp$ unzip utbot-release-1.0.167.zip\n</code></pre>\n</li>\n<li>Unpack tar\n<pre><code class=\"language-bash\">utbot@userhwlp:~/utbotcpp$ tar -xvzf utbot_distr.tar.gz\n</code></pre>\n</li>\n<li>Install and run server under the <code>root</code>\n<pre><code class=\"language-bash\">utbot@userhwlp:~/utbotcpp$ sudo chmod +x unpack_and_run_utbot.sh &#x26;&#x26; ./unpack_and_run_utbot.sh\n</code></pre>\n<strong>NB!</strong> UTBot need to be run under the root to get an access to Windows File System with necessary privileges.</li>\n</ul>\n<p>To run correctly UTBot server needs well-configured build-related and <code>gcc-9</code> packages.\nYou can do it by running the following script:</p>\n<pre><code class=\"language-bash\">#!/bin/bash\n\nsudo apt-get update -y\nsudo apt-get upgrade -y\nsudo apt-get dist-upgrade -y\nsudo apt-get install build-essential software-properties-common -y\nsudo add-apt-repository ppa:ubuntu-toolchain-r/test -y\nsudo apt-get update -y\nsudo apt-get install gcc-9 g++-9 -y\nsudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-9\nsudo update-alternatives --config gcc\n</code></pre>\n<h2>Restart UTBot server</h2>\n<p>There are several ways to restart the UTBot server:</p>\n<ul>\n<li>Restart UTBot server only. You can do it by the command from home directory of <code>utbot</code> user inside WSL2 container:\n<pre><code class=\"language-bash\">utbot@userhwlp:~$ sudo ~/utbotcpp/utbot_distr/utbot_server_restart.sh\n</code></pre>\n</li>\n<li>Restart WSL2 subsystem from PowerShell command line\n<pre><code class=\"language-PowerShell\">PS C:\\Users\\u00663918> wsl --terminate Ubuntu-18.04\n</code></pre>\nAfter that you need to run WSL2 container <strong>Ubuntu-18.04</strong> again and start the server by internal script\n<pre><code class=\"language-bash\">utbot@userhwlp:~$ sudo ~/utbotcpp/utbot_distr/utbot_server_restart.sh\n</code></pre>\n</li>\n</ul>\n<h2>VC UTBot plugin setup</h2>\n<p>Due to single FS project organization you don't need synchronize the project source on Windows with WSL2 UTBot server.\nAs a result you don't need SFTP plugin.\nWhile mandatory setup of UTBot plugin (Run UTBot: Quickstart wizard) you need</p>\n<ul>\n<li><code>Connection</code> step:\n<ul>\n<li>Type <code>localhost</code> in <strong>Host</strong>  field (<strong>NB!</strong> not <code>127.0.0.1</code>, not a temporary IP address that will change each time the WSL2 container is started)</li>\n<li>Type <code>2121</code> in <strong>Port</strong>  field</li>\n</ul>\n</li>\n<li><code>Remote Path</code> step:\nType <code>/mnt/d/dev/c-example-my-vc</code> for windows project from  <code>d:\\dev\\c-example-my-vc</code> in <strong>Remote Path</strong> field</li>\n</ul>\n<p>That is all!\nGood luck!</p>","frontmatter":{"path":"/docs/cpp/usage/docker-free-utbot-in-wsl2"}}},"pageContext":{}},"staticQueryHashes":["1550867996","2819311301","63159454"]}