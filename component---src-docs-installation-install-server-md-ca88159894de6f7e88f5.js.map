{"version":3,"file":"component---src-docs-installation-install-server-md-ca88159894de6f7e88f5.js","mappings":"8RAQaA,EAAe,Q,+OAC5B,IAAMC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,cACE,GAAM,8CADR,+CAGA,0FAA4E,kBAAQC,WAAW,KAAnB,gBAA5E,2DAAuL,aAAGA,WAAW,IACjM,KAAQ,uBAD2K,uBAAvL,MAGA,wDAA0C,aAAGA,WAAW,IACpD,KAAQ,yBAD8B,wBAA1C,0CAGA,cACE,GAAM,oBADR,qBAGA,mBACE,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,UAA6B,aAAGA,WAAW,IACvC,KAAQ,oDADiB,WAA7B,6CAIF,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,mBAEF,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,sBAGJ,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,uEAIL,cACE,MAAS,IAET,cAAIA,WAAW,MAAf,2NAA+O,sBAAYA,WAAW,MAAvB,QAA/O,iDAAiV,sBAAYA,WAAW,MAAvB,aAAjV,sFAA6d,sBAAYA,WAAW,MAAvB,eAA7d,2BAEF,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,yCAIL,cACE,GAAM,qBADR,sBAGA,4IACA,kBAAG,eAAKC,IAAI,mBAAmBC,IAAI,uG,sOAKvCN,EAAWO,gBAAiB","sources":["webpack://unittestbot-web/./src/docs/installation/install-server.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/user/Github/utbot-new-wiki/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"installing-and-setting-up-the-utbot-server\"\n    }}>{`Installing and Setting Up the UTBot Server`}</h1>\n    <p>{`This page provides a step-by-step instruction to install and run the `}<strong parentName=\"p\">{`UTBot Server`}</strong>{` on a Linux host. For list of supported platforms, see `}<a parentName=\"p\" {...{\n        \"href\": \"system-requirements\"\n      }}>{`system requirements`}</a>{`.`}</p>\n    <p>{`You probably would want to install `}<a parentName=\"p\" {...{\n        \"href\": \"install-vscode-plugin\"\n      }}>{`UTBot VS Code Plugin`}</a>{` after you finish server instalation.`}</p>\n    <h2 {...{\n      \"id\": \"steps-to-install\"\n    }}>{`Steps to Install`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Place `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/UnitTestBot/UTBotCpp/releases\"\n          }}>{`release`}</a>{` zip archive in your working directory.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Unzip archive`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the script:`}</p>\n      </li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`$ chmod +x unpack_and_run_utbot.sh && ./unpack_and_run_utbot.sh\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`The script will unpack required dependencies in a folder and then run server executable. You will be given information about its process id, logging path, path to temporary artifacts and port (the default option is `}<inlineCode parentName=\"li\">{`2121`}</inlineCode>{`). At any time you can kill the server using `}<inlineCode parentName=\"li\">{`kill $pid`}</inlineCode>{`. If you want to launch UTBot server on another port, you can enter the directory `}<inlineCode parentName=\"li\">{`utbot_distr`}</inlineCode>{` and call the script `}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`$ ./utbot_server_restart.sh $PORT\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"installation-demo\"\n    }}>{`Installation Demo`}</h2>\n    <p>{`The animation below demonstrates the deploying process for the UTBot Server and mounting a simple C project inside it.`}</p>\n    <p><img alt=\"serverInstallGif\" src=\"https://github.com/UnitTestBot/unittestbot.github.io/raw/source/resources/gifs/serverInstall.gif\" /></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","isMDXComponent"],"sourceRoot":""}